{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.connect && $options.connect(...args))\n  }, \"连接WebSocket\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"发送消息\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onClick","_cache","args","$options","connect","sendMessage"],"sources":["D:\\VUE\\demo\\src\\pages\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"connect\">连接WebSocket</button>\r\n    <button @click=\"sendMessage\">发送消息</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      socket: null,\r\n    };\r\n  },\r\n  methods: {\r\n    connect() {\r\n      this.socket = new WebSocket(\"ws://localhost:8080/websocket\");\r\n\r\n      this.socket.addEventListener(\"open\", () => {\r\n        console.log(\"WebSocket已连接\");\r\n      });\r\n\r\n      this.socket.addEventListener(\"message\", (event) => {\r\n        console.log(\"收到消息:\", event.data);\r\n      });\r\n\r\n      this.socket.addEventListener(\"close\", () => {\r\n        console.log(\"WebSocket已关闭\");\r\n      });\r\n    },\r\n    sendMessage() {\r\n      if (this.socket && this.socket.readyState === WebSocket.OPEN) {\r\n        this.socket.send(\"Hello, WebSocket!\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":";;uBACEA,mBAAA,CAGM,cAFJC,mBAAA,CAA6C;IAApCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,aAAW,GACpCH,mBAAA,CAA0C;IAAjCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,WAAA,IAAAF,QAAA,CAAAE,WAAA,IAAAH,IAAA,CAAW;KAAE,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}