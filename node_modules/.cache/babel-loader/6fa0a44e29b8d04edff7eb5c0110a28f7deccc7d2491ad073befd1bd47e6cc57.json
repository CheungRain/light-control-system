{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nexport default {\n  __name: 'IndexPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      this.blobToBase64(file, base64String => {\n        // 在这里处理base64字符串\n        console.log(base64String);\n      });\n    };\n    const blobToBase64 = (blob, callback) => {\n      const reader = new FileReader();\n      reader.onload = function (result) {\n        const base64String = window.btoa(String.fromCharCode(...new Uint8Array(result.target.result)));\n        callback(base64String);\n      };\n      reader.readAsArrayBuffer(blob);\n    };\n    const __returned__ = {\n      handleFileChange,\n      blobToBase64\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["handleFileChange","event","file","target","files","blobToBase64","base64String","console","log","blob","callback","reader","FileReader","onload","result","window","btoa","String","fromCharCode","Uint8Array","readAsArrayBuffer"],"sources":["D:/javafile/LightControl/src/views/IndexPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input type=\"file\" @change=\"handleFileChange\">\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n    const handleFileChange = (event) => {\r\n      const file = event.target.files[0];\r\n      this.blobToBase64(file, (base64String) => {\r\n        // 在这里处理base64字符串\r\n        console.log(base64String);\r\n      });\r\n    }\r\n    const blobToBase64 = (blob,callback) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (result) {\r\n        const base64String = window.btoa(String.fromCharCode(...new Uint8Array(result.target.result)))\r\n        callback(base64String)\r\n      }\r\n      reader.readAsArrayBuffer(blob)\r\n    }\r\n\r\n</script>\r\n"],"mappings":";;;;;;;;;;;;;;IAOI,MAAMA,gBAAgB,GAAIC,KAAK,IAAK;MAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAI,CAACC,YAAY,CAACH,IAAI,EAAGI,YAAY,IAAK;QACxC;QACAC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC;IACD,MAAMD,YAAY,GAAGA,CAACI,IAAI,EAACC,QAAQ,KAAK;MACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,UAAUC,MAAM,EAAE;QAChC,MAAMR,YAAY,GAAGS,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIC,UAAU,CAACL,MAAM,CAACX,MAAM,CAACW,MAAM,CAAC,CAAC,CAAC;QAC9FJ,QAAQ,CAACJ,YAAY,CAAC;MACxB,CAAC;MACDK,MAAM,CAACS,iBAAiB,CAACX,IAAI,CAAC;IAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}