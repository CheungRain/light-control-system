{"ast":null,"code":"import { reactive, onMounted, onUnmounted } from 'vue';\nexport default {\n  __name: 'IndexPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const state = reactive({\n      transcript: '',\n      recognition: null\n    });\n    onMounted(() => {\n      state.recognition = new webkitSpeechRecognition();\n      state.recognition.onresult = onRecognitionResult;\n      state.recognition.continuous = true;\n      state.recognition.lang = 'zh-CN';\n    });\n    onUnmounted(() => {\n      stopRecognition();\n    });\n    function onRecognitionResult(event) {\n      const lastResultIndex = event.results.length - 1;\n      const text = event.results[lastResultIndex][0].transcript;\n      state.transcript += text;\n    }\n    function startRecognition() {\n      state.transcript = '';\n      state.recognition.start();\n    }\n    function stopRecognition() {\n      if (state.recognition) {\n        state.recognition.stop();\n      }\n    }\n    const __returned__ = {\n      state,\n      onRecognitionResult,\n      startRecognition,\n      stopRecognition,\n      reactive,\n      onMounted,\n      onUnmounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","onMounted","onUnmounted","state","transcript","recognition","webkitSpeechRecognition","onresult","onRecognitionResult","continuous","lang","stopRecognition","event","lastResultIndex","results","length","text","startRecognition","start","stop"],"sources":["D:/javafile/LightControl/src/views/IndexPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @mousedown=\"startRecognition\" @mouseup=\"stopRecognition\">按住说话</button>\r\n    <div>{{ transcript }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, onMounted, onUnmounted } from 'vue';\r\n\r\nconst state = reactive({\r\n  transcript: '',\r\n  recognition: null\r\n});\r\n\r\nonMounted(() => {\r\n  state.recognition = new webkitSpeechRecognition();\r\n  state.recognition.onresult = onRecognitionResult;\r\n  state.recognition.continuous = true;\r\n  state.recognition.lang = 'zh-CN';\r\n});\r\n\r\nonUnmounted(() => {\r\n  stopRecognition();\r\n});\r\n\r\nfunction onRecognitionResult(event) {\r\n  const lastResultIndex = event.results.length - 1;\r\n  const text = event.results[lastResultIndex][0].transcript;\r\n  state.transcript += text;\r\n}\r\n\r\nfunction startRecognition() {\r\n  state.transcript = '';\r\n  state.recognition.start();\r\n}\r\n\r\nfunction stopRecognition() {\r\n  if (state.recognition) {\r\n    state.recognition.stop();\r\n  }\r\n}\r\n</script>"],"mappings":"AAQA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;;;;;;;IAEtD,MAAMC,KAAK,GAAGH,QAAQ,CAAC;MACrBI,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE;IACf,CAAC,CAAC;IAEFJ,SAAS,CAAC,MAAM;MACdE,KAAK,CAACE,WAAW,GAAG,IAAIC,uBAAuB,CAAC,CAAC;MACjDH,KAAK,CAACE,WAAW,CAACE,QAAQ,GAAGC,mBAAmB;MAChDL,KAAK,CAACE,WAAW,CAACI,UAAU,GAAG,IAAI;MACnCN,KAAK,CAACE,WAAW,CAACK,IAAI,GAAG,OAAO;IAClC,CAAC,CAAC;IAEFR,WAAW,CAAC,MAAM;MAChBS,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,SAASH,mBAAmBA,CAACI,KAAK,EAAE;MAClC,MAAMC,eAAe,GAAGD,KAAK,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC;MAChD,MAAMC,IAAI,GAAGJ,KAAK,CAACE,OAAO,CAACD,eAAe,CAAC,CAAC,CAAC,CAAC,CAACT,UAAU;MACzDD,KAAK,CAACC,UAAU,IAAIY,IAAI;IAC1B;IAEA,SAASC,gBAAgBA,CAAA,EAAG;MAC1Bd,KAAK,CAACC,UAAU,GAAG,EAAE;MACrBD,KAAK,CAACE,WAAW,CAACa,KAAK,CAAC,CAAC;IAC3B;IAEA,SAASP,eAAeA,CAAA,EAAG;MACzB,IAAIR,KAAK,CAACE,WAAW,EAAE;QACrBF,KAAK,CAACE,WAAW,CAACc,IAAI,CAAC,CAAC;MAC1B;IACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}