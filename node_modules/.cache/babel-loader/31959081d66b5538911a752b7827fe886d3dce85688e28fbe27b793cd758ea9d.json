{"ast":null,"code":"import { createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"light-switch\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_text = _resolveComponent(\"el-text\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"ElButton\"], {\n    class: \"audio-button\",\n    type: \"button\",\n    onClick: $setup.RecordAudio\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"语音识别\")]),\n    _: 1 /* STABLE */\n  }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.lights, light => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: light.id,\n      class: \"light\"\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass({\n        'light-wrapper-on': light.isOn,\n        'light-wrapper-off': !light.isOn\n      })\n    }, [_createElementVNode(\"div\", {\n      class: \"light-status\",\n      onClick: $event => light.showTimerDialog = true\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass({\n        'light-name-on': light.isOn,\n        'light-name-off': !light.isOn\n      })\n    }, _toDisplayString(light.name), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", {\n      class: _normalizeClass({\n        'on': light.isOn,\n        'off': !light.isOn\n      })\n    }, _toDisplayString(light.isOn ? '已开启' : '已关闭'), 3 /* TEXT, CLASS */)], 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createVNode($setup[\"ElSwitch\"], {\n      modelValue: light.isOn,\n      \"onUpdate:modelValue\": $event => light.isOn = $event,\n      \"active-value\": 1,\n      \"inactive-value\": 0,\n      \"active-color\": \"#13ce66\",\n      \"inactive-color\": \"#ff4949\",\n      onChange: $event => $setup.switchChange(light)\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])]), _createElementVNode(\"div\", {\n      class: \"light-timer-countdown\",\n      onClick: $event => light.showTimerDialog = true\n    }, [light.timerStatus === true && light.isTimerOnOff === 1 ? (_openBlock(), _createBlock(_component_el_text, {\n      key: 0,\n      class: \"light-timer-countdown-on\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 还有\" + _toDisplayString(light.timerTimeCopy) + \"秒开启 \", 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : light.timerStatus === true && light.isTimerOnOff === 0 ? (_openBlock(), _createBlock(_component_el_text, {\n      key: 1,\n      class: \"light-timer-countdown-off\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 还有\" + _toDisplayString(light.timerTimeCopy) + \"秒关闭 \", 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createBlock(_component_el_text, {\n      key: 2\n    }, {\n      default: _withCtx(() => [_hoisted_5]),\n      _: 1 /* STABLE */\n    }))], 8 /* PROPS */, _hoisted_4)], 2 /* CLASS */), _createVNode($setup[\"ElDialog\"], {\n      class: \"dialog mobile-dialog\",\n      modelValue: light.showTimerDialog,\n      \"onUpdate:modelValue\": $event => light.showTimerDialog = $event,\n      title: \"设置定时\",\n      onClose: $event => light.showTimerDialog = false\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ElForm\"], null, {\n        default: _withCtx(() => [_createVNode($setup[\"ElFormItem\"], {\n          label: \"定时开关\"\n        }, {\n          default: _withCtx(() => [_createVNode($setup[\"ElSelect\"], {\n            class: \"select light-timer-select\",\n            modelValue: light.isTimerOnOff,\n            \"onUpdate:modelValue\": $event => light.isTimerOnOff = $event,\n            placeholder: \"请选择\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.onOff, item => {\n              return _openBlock(), _createBlock($setup[\"ElOption\"], {\n                key: item.value,\n                label: item.label,\n                value: item.value\n              }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n            }), 128 /* KEYED_FRAGMENT */))]),\n\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */), _createVNode($setup[\"ElFormItem\"], {\n          label: \"定时时间\"\n        }, {\n          default: _withCtx(() => [_createVNode($setup[\"ElSelect\"], {\n            class: \"select light-timer-select\",\n            modelValue: light.timerTime,\n            \"onUpdate:modelValue\": $event => light.timerTime = $event,\n            placeholder: \"请选择\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.timerChoices, item => {\n              return _openBlock(), _createBlock($setup[\"ElOption\"], {\n                key: item.value,\n                label: item.label,\n                value: item.value\n              }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n            }), 128 /* KEYED_FRAGMENT */))]),\n\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */), _createVNode($setup[\"ElButton\"], {\n          class: \"button light-timer-confirm-button\",\n          onClick: $event => $setup.confirmTime(light)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"确认\")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode($setup[\"ElButton\"], {\n          class: \"button light-timer-cancel-button\",\n          onClick: $event => $setup.cancelTime(light)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"取消\")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onClose\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","$setup","type","onClick","RecordAudio","_Fragment","_renderList","lights","light","key","id","_normalizeClass","isOn","$event","showTimerDialog","name","_hoisted_3","onChange","switchChange","timerStatus","isTimerOnOff","_createBlock","_component_el_text","_toDisplayString","timerTimeCopy","_hoisted_5","title","onClose","label","placeholder","onOff","item","value","timerTime","timerChoices","confirmTime","cancelTime"],"sources":["D:\\javafile\\LightControl\\src\\views\\IndexPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-button class=\"audio-button\" type=\"button\" @click=\"RecordAudio\">语音识别</el-button>\r\n    <div v-for=\"light in lights\" :key=\"light.id\" class=\"light\">\r\n      <div :class=\"{'light-wrapper-on': light.isOn, 'light-wrapper-off': !light.isOn}\">\r\n        <div class=\"light-status\" @click=\"light.showTimerDialog = true\">\r\n          <div :class=\"{'light-name-on': light.isOn, 'light-name-off': !light.isOn}\">{{ light.name }}</div>\r\n          <div :class=\"{'on': light.isOn, 'off': !light.isOn}\">\r\n            {{ light.isOn ? '已开启' : '已关闭' }}\r\n          </div>\r\n        </div>\r\n        <div class=\"light-switch\">\r\n          <el-switch\r\n              v-model=\"light.isOn\"\r\n              :active-value=\"1\"\r\n              :inactive-value=\"0\"\r\n              active-color=\"#13ce66\"\r\n              inactive-color=\"#ff4949\"\r\n              @change=\"switchChange(light)\">\r\n          </el-switch>\r\n        </div>\r\n        <div class=\"light-timer-countdown\" @click=\"light.showTimerDialog = true\">\r\n          <el-text class=\"light-timer-countdown-on\" v-if=\"light.timerStatus===true && light.isTimerOnOff===1\">\r\n            还有{{light.timerTimeCopy}}秒开启\r\n          </el-text>\r\n          <el-text class=\"light-timer-countdown-off\" v-else-if=\"light.timerStatus===true && light.isTimerOnOff===0\">\r\n            还有{{light.timerTimeCopy}}秒关闭\r\n          </el-text>\r\n          <el-text v-else>\r\n            <br>\r\n          </el-text>\r\n        </div>\r\n      </div>\r\n      <el-dialog class=\"dialog mobile-dialog\"\r\n                 v-model=\"light.showTimerDialog\"\r\n                 title=\"设置定时\"\r\n                 @close=\"light.showTimerDialog = false\">\r\n        <el-form>\r\n          <el-form-item label=\"定时开关\">\r\n            <el-select\r\n                class=\"select light-timer-select\"\r\n                v-model=\"light.isTimerOnOff\"\r\n                placeholder=\"请选择\">\r\n              <el-option\r\n                  v-for=\"item in onOff\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"定时时间\">\r\n            <el-select\r\n                class=\"select light-timer-select\"\r\n                v-model=\"light.timerTime\"\r\n                placeholder=\"请选择\">\r\n              <el-option\r\n                  v-for=\"item in timerChoices\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-button class=\"button light-timer-confirm-button\" @click=\"confirmTime(light)\">确认</el-button>\r\n          <el-button class=\"button light-timer-cancel-button\" @click=\"cancelTime(light)\">取消</el-button>\r\n        </el-form>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {onMounted, ref} from 'vue';\r\nimport { ElSwitch, ElButton, ElDialog, ElForm, ElFormItem, ElSelect, ElOption, ElMessage } from 'element-plus';\r\nimport axios from \"axios\";\r\nimport Recorder from \"js-audio-recorder\";\r\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\nconst analyser = audioContext.createAnalyser();\r\nanalyser.fftSize = 256;\r\nconst bufferLength = analyser.frequencyBinCount;\r\nconst dataArray = new Uint8Array(bufferLength);\r\nconst micVolume = ref(0);\r\nlet audio = false;\r\nconst detectVolume = () => {\r\n  analyser.getByteFrequencyData(dataArray);\r\n  let sum = 0;\r\n  for(let i = 0; i < bufferLength; i++){\r\n    sum += dataArray[i];\r\n  }\r\n  const volume = sum / bufferLength;\r\n  micVolume.value = volume;\r\n\r\n  if(volume>2000 && audio==false){\r\n    RecordAudio();\r\n  }\r\n  requestAnimationFrame(detectVolume);\r\n}\r\nonMounted(() => {\r\n  detectVolume()\r\n  navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(stream => {\r\n        const source = audioContext.createMediaStreamSource(stream);\r\n        source.connect(analyser);\r\n        detectVolume();\r\n      })\r\n      .catch(err => {\r\n        console.error('Error getting user media:', err);\r\n      });\r\n});\r\nElMessage.success('欢迎登录');\r\n\r\nconst lights = ref([\r\n  {\r\n    id: 1,//灯的id号\r\n    name: '灯1',//灯的名称\r\n    isOn: 0,//灯的当前开关状态0是关1是开\r\n    isTimerOnOff: null,//灯的定时状态\r\n    timerTime: null,//灯的定时时间\r\n    timerTimeCopy: null,//灯定时时间的拷贝用于显示定时倒计时\r\n    timerStatus: false,//灯的定时状态\r\n    showTimerDialog: false,//灯定时对话框的弹出\r\n    timerInterval: null//灯定时倒计时器\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '灯2',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false,\r\n    timerInterval: null\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '灯3',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false,\r\n    timerInterval: null\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '灯4',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false,\r\n    timerInterval: null\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '灯5',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false,\r\n    timerInterval: null\r\n  }\r\n]);\r\n\r\nconst timerChoices = ref([\r\n  {\r\n    label: '10秒',\r\n    value: 10\r\n  },\r\n  {\r\n    label: '20秒',\r\n    value: 20\r\n  },\r\n  {\r\n    label: '30秒',\r\n    value: 30\r\n  },\r\n  {\r\n    label: '40秒',\r\n    value: 40\r\n  },\r\n  {\r\n    label: '50秒',\r\n    value: 50\r\n  },\r\n  {\r\n    label: '60秒',\r\n    value: 60\r\n  }\r\n]);\r\n\r\nconst onOff = ref([\r\n  {\r\n    label: '定时开',\r\n    value: 1\r\n  },\r\n  {\r\n    label: '定时关',\r\n    value: 0\r\n  }\r\n]);\r\n\r\nconst blobToBase64 = (blob, callback) => {\r\n  const reader = new FileReader();\r\n  reader.onload = (result) => {\r\n    const base64String = btoa(\r\n        String.fromCharCode(...new Uint8Array(result.target.result))\r\n    );\r\n    callback(base64String);\r\n  };\r\n  reader.readAsArrayBuffer(blob);\r\n};\r\n\r\nconst recorder = new Recorder({\r\n  sampleBits: 16,\r\n  sampleRate: 16000,\r\n  numChannels: 1,\r\n});\r\n\r\nconst RecordAudio = () => {\r\n  audio = true;\r\n  ElMessage.success('开始识别')\r\n  // console.log(\"开始录音\")\r\n  recorder.start()\r\n  setTimeout(()=>{\r\n    ElMessage.warning('停止识别')\r\n    // console.log(\"停止录音\");\r\n    const pcmBlob = recorder.getPCMBlob();\r\n    const pcmBlob_len = pcmBlob.size;\r\n    blobToBase64(pcmBlob, (base64String) => {\r\n      const base64 = base64String;\r\n      const token = '24.19950bee43802d550f29b4d12c5015e3.2592000.1702287353.282335-42750245'\r\n      const format = 'pcm';\r\n      const rate = 16000;\r\n      const channel = 1;\r\n      const cuid = '5Bg3dVi0WNfWISubL00qxugrCQX5q5NN';\r\n      const dev_pid =  1537;\r\n      const speech = base64;\r\n      const len = pcmBlob_len;\r\n      const url = 'api0/server_api'\r\n      const data = {\r\n        token: token,\r\n        format: format,\r\n        rate: rate,\r\n        channel: channel,\r\n        cuid: cuid,\r\n        dev_pid: dev_pid,\r\n        speech: speech,\r\n        len: len\r\n      };\r\n      const config = {\r\n        headers: {\r\n          \"Accept\": \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n      axios.post(url, data, config).then(response => {\r\n        const audio_string = response.data.result[0].replace(/[^\\u4e00-\\u9fa5]/g, '');\r\n        console.log(audio_string)\r\n        //ElMessage.warning(audio_string)\r\n        if(audio_string.includes('取') || audio_string.includes('消')){\r\n          if(audio_string.includes('一')){\r\n            cancelTime(lights.value[0]);\r\n          }\r\n          if(audio_string.includes('二')){\r\n            cancelTime(lights.value[1]);\r\n          }\r\n          if(audio_string.includes('三')){\r\n            cancelTime(lights.value[2]);\r\n          }\r\n          if(audio_string.includes('四')){\r\n            cancelTime(lights.value[3]);\r\n          }\r\n          if(audio_string.includes('五')){\r\n            cancelTime(lights.value[4]);\r\n          }\r\n        }else if(audio_string.includes('定') || audio_string.includes('时')){\r\n          if(audio_string.includes('开')){\r\n            if(audio_string.includes('一')){\r\n              lights.value[0].timerStatus = true;\r\n              lights.value[0].timerTime = 30;\r\n              lights.value[0].isTimerOnOff = 1;\r\n              confirmTime(lights.value[0]);\r\n            }\r\n            if(audio_string.includes('二')){\r\n              lights.value[1].timerStatus = true;\r\n              lights.value[1].timerTime = 30;\r\n              lights.value[1].isTimerOnOff = 1;\r\n              confirmTime(lights.value[1]);\r\n            }\r\n            if(audio_string.includes('三')){\r\n              lights.value[2].timerStatus = true;\r\n              lights.value[2].timerTime = 30;\r\n              lights.value[2].isTimerOnOff = 1;\r\n              confirmTime(lights.value[2]);\r\n            }\r\n            if(audio_string.includes('四')){\r\n              lights.value[3].timerStatus = true;\r\n              lights.value[3].timerTime = 30;\r\n              lights.value[3].isTimerOnOff = 1;\r\n              confirmTime(lights.value[3]);\r\n            }\r\n            if(audio_string.includes('五')){\r\n              lights.value[4].timerStatus = true;\r\n              lights.value[4].timerTime = 30;\r\n              lights.value[4].isTimerOnOff = 1;\r\n              confirmTime(lights.value[4]);\r\n            }\r\n          }else if(audio_string.includes('关')){\r\n            if(audio_string.includes('一')){\r\n              lights.value[0].timerStatus = true;\r\n              lights.value[0].timerTime = 30;\r\n              lights.value[0].isTimerOnOff = 0;\r\n              confirmTime(lights.value[0]);\r\n            }\r\n            if(audio_string.includes('二')){\r\n              lights.value[1].timerStatus = true;\r\n              lights.value[1].timerTime = 30;\r\n              lights.value[1].isTimerOnOff = 0;\r\n              confirmTime(lights.value[1]);\r\n            }\r\n            if(audio_string.includes('三')){\r\n              lights.value[2].timerStatus = true;\r\n              lights.value[2].timerTime = 30;\r\n              lights.value[2].isTimerOnOff = 0;\r\n              confirmTime(lights.value[2]);\r\n            }\r\n            if(audio_string.includes('四')){\r\n              lights.value[3].timerStatus = true;\r\n              lights.value[3].timerTime = 30;\r\n              lights.value[3].isTimerOnOff = 0;\r\n              confirmTime(lights.value[3]);\r\n            }\r\n            if(audio_string.includes('五')){\r\n              lights.value[4].timerStatus = true;\r\n              lights.value[4].timerTime = 30;\r\n              lights.value[4].isTimerOnOff = 0;\r\n              confirmTime(lights.value[4]);\r\n            }\r\n          }\r\n        }else if(audio_string.includes('打') || audio_string.includes('开')){\r\n          if(audio_string.includes('一')){\r\n            lights.value[0].isOn = 1;\r\n            switchChange(lights.value[0]);\r\n          }\r\n          if(audio_string.includes('二')){\r\n            lights.value[1].isOn = 1;\r\n            switchChange(lights.value[1]);\r\n          }\r\n          if(audio_string.includes('三')){\r\n            lights.value[2].isOn = 1;\r\n            switchChange(lights.value[2]);\r\n          }\r\n          if(audio_string.includes('四')){\r\n            lights.value[3].isOn = 1;\r\n            switchChange(lights.value[3]);\r\n          }\r\n          if(audio_string.includes('五')){\r\n            lights.value[4].isOn = 1;\r\n            switchChange(lights.value[4]);\r\n          }\r\n        }else if(audio_string.includes('关') || audio_string.includes('闭')){\r\n          if(audio_string.includes('一')){\r\n            lights.value[0].isOn = 0;\r\n            switchChange(lights.value[0]);\r\n          }\r\n          if(audio_string.includes('二')){\r\n            lights.value[1].isOn = 0;\r\n            switchChange(lights.value[1]);\r\n          }\r\n          if(audio_string.includes('三')){\r\n            lights.value[2].isOn = 0;\r\n            switchChange(lights.value[2]);\r\n          }\r\n          if(audio_string.includes('四')){\r\n            lights.value[3].isOn = 0;\r\n            switchChange(lights.value[3]);\r\n          }\r\n          if(audio_string.includes('五')){\r\n            lights.value[4].isOn = 0;\r\n            switchChange(lights.value[4]);\r\n          }\r\n        }\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      })\r\n    });\r\n    audio = false;\r\n  },3900);\r\n};\r\n\r\n\r\nconst switchChange = (light) => {\r\n  // const url = 'api'+light.id.toString()+'/led_'+light.id.toString()\r\n  // const data = {\r\n  //   button: light.isOn\r\n  // };\r\n  // const config = {\r\n  //   params: data\r\n  // }\r\n  // axios.post(url, data, config).then(response => {\r\n  //   console.log(response.data)\r\n  // })\r\n}\r\n\r\nconst cancelTime = (light) =>{\r\n  if(light.timerStatus) {\r\n    // const url = \"\"\r\n    // const data = {\r\n    //\r\n    // };\r\n    // const config = {\r\n    //   params: data\r\n    // }\r\n    // axios.post(url, data, config).then(response => {\r\n    //   console.log(response.data)\r\n    // })\r\n    clearInterval(light.timerInterval);\r\n    light.isTimerOnOff = null;\r\n    light.timerTime = null;\r\n    light.timerStatus = false;\r\n    ElMessage.success(light.name.toString() + \"取消定时成功\");\r\n  }else{\r\n    ElMessage.error(light.name.toString()+\"还没有设置定时\")\r\n  }\r\n  light.showTimerDialog = false;\r\n};\r\n\r\nconst confirmTime = (light) => {\r\n  if (light.isTimerOnOff !== null && light.timerTime !== null) {\r\n    // const url = \"\"\r\n    // const data = {\r\n    //\r\n    // };\r\n    // const config = {\r\n    //   params: data\r\n    // }\r\n    // axios.post(url, data, config).then(response => {\r\n    //   console.log(response.data)\r\n    // })\r\n    ElMessage.success(light.name.toString()+\"定时成功\")\r\n    light.showTimerDialog = false;\r\n    light.timerStatus = true;\r\n    light.timerTimeCopy = light.timerTime;\r\n    clearInterval(light.timerInterval);\r\n    light.timerInterval = setInterval(() => {\r\n      if (light.timerTimeCopy > 1) {\r\n        light.timerTimeCopy--;\r\n      } else {\r\n        clearInterval(light.timerInterval);\r\n        ElMessage.success(light.name.toString()+\"定时时间到了\")\r\n        light.timerStatus = false;\r\n        light.isOn = light.isTimerOnOff;\r\n      }\r\n    }, 1000);\r\n  }else{\r\n    ElMessage.error(\"请选择定时开关和定时时间\")\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  background: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.light {\r\n  width: 300px;\r\n  height: 125px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.light-wrapper-on {\r\n  border: 1px solid rgb(19, 206, 102);\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 0px 3px rgb(19, 206, 102);\r\n  background: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.light-wrapper-off {\r\n  border: 1px solid rgb(255, 73, 73);\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 0px 1px rgb(255, 73, 73);\r\n  background: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.light-status{\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.light-name-on{\r\n  color: rgb(19, 206, 102);\r\n}\r\n\r\n.light-name-off{\r\n  color: rgb(255, 73, 73);\r\n}\r\n\r\n.on{\r\n  color: rgb(19, 206, 102);\r\n}\r\n\r\n.off{\r\n  color: rgb(255, 73, 73);\r\n}\r\n\r\n.light-switch {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.dialog {\r\n  border-radius: 15px;\r\n  box-shadow: 0px 0px 8px rgba(245, 212, 7, 0.3);\r\n  background: rgba(255, 255, 255, 0.88);\r\n  width: 250px;\r\n}\r\n\r\n.dialog::before {\r\n  content: \"\";\r\n  background: inherit;\r\n  filter: blur(20px) brightness(0.7);\r\n  position: absolute;\r\n  top: -10px;\r\n  bottom: -10px;\r\n  right: -10px;\r\n  left: -10px;\r\n  z-index: -1;\r\n  border-radius: inherit;\r\n  width: 250px;\r\n}\r\n\r\n.mobile-dialog {\r\n  padding: 14px 20px !important;\r\n}\r\n\r\n.light-timer-select {\r\n  width: 100%;\r\n}\r\n\r\n.audio-button{\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  width: 270px;\r\n  border-radius: 8px;\r\n  background:inherit;\r\n  border: none;\r\n  color: #ffffff;\r\n}\r\n\r\n.light-timer-confirm-button {\r\n  margin-top: 20px;\r\n  background-color: rgb(19, 206, 102);\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.light-timer-cancel-button {\r\n  margin-top: 20px;\r\n  background-color: rgb(255, 73, 73);\r\n  border: none;\r\n  color: white;\r\n}\r\n.light-timer-countdown-on{\r\n  color: rgb(19, 206, 102);\r\n}\r\n\r\n.light-timer-countdown-off{\r\n  color: rgb(255, 73, 73);\r\n}\r\n\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}