{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileChange && $options.handleFileChange(...args))\n  }, null, 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","type","onChange","_cache","args","$options","handleFileChange"],"sources":["D:\\javafile\\LightControl\\src\\views\\IndexPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input type=\"file\" @change=\"handleFileChange\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  methods: {\r\n    handleFileChange(event) {\r\n      const file = event.target.files[0];\r\n      this.blobToBase64(file, (base64String) => {\r\n        // 在这里处理base64字符串\r\n        console.log(base64String);\r\n      });\r\n    },\r\n    blobToBase64(blob, callback) {\r\n      const reader = new FileReader();\r\n      reader.onload = function (result) {\r\n        const base64String = window.btoa(String.fromCharCode(...new Uint8Array(result.target.result)))\r\n        callback(base64String)\r\n      }\r\n      reader.readAsArrayBuffer(blob)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAEM,cADJC,mBAAA,CAA8C;IAAvCC,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}