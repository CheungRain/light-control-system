{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport Recorder from \"js-audio-recorder\";\nimport axios from \"axios\";\nexport default {\n  __name: 'IndexPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let button = false;\n    const blobToBase64 = (blob, callback) => {\n      const reader = new FileReader();\n      reader.onload = function (result) {\n        const base64String = window.btoa(String.fromCharCode(...new Uint8Array(result.target.result)));\n        callback(base64String);\n      };\n      reader.readAsArrayBuffer(blob);\n    };\n    const recorder = new Recorder({\n      sampleBits: 16,\n      sampleRate: 16000,\n      numChannels: 1\n    });\n    const RecordAudio = () => {\n      console.log(\"开始录音\");\n      recorder.start();\n      console.log(\"停止录音\");\n      const file = recorder.getPCMBlob();\n      const file_len = file.size;\n      blobToBase64(file, base64String => {\n        const base64 = base64String;\n        const token = '24.19950bee43802d550f29b4d12c5015e3.2592000.1702287353.282335-42750245';\n        const format = 'pcm';\n        const rate = 16000;\n        const channel = 1;\n        const cuid = '5Bg3dVi0WNfWISubL00qxugrCQX5q5NN';\n        const dev_pid = 1537;\n        const speech = base64;\n        const len = file_len;\n        const url = 'api0/server_api';\n        const data = {\n          token: token,\n          format: format,\n          rate: rate,\n          channel: channel,\n          cuid: cuid,\n          dev_pid: dev_pid,\n          speech: speech,\n          len: len\n        };\n        const config = {\n          headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        axios.post(url, data, config).then(response => {\n          console.log(response.data.result[0]);\n        });\n      });\n    };\n    const __returned__ = {\n      get button() {\n        return button;\n      },\n      set button(v) {\n        button = v;\n      },\n      blobToBase64,\n      recorder,\n      RecordAudio,\n      get Recorder() {\n        return Recorder;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Recorder","axios","button","blobToBase64","blob","callback","reader","FileReader","onload","result","base64String","window","btoa","String","fromCharCode","Uint8Array","target","readAsArrayBuffer","recorder","sampleBits","sampleRate","numChannels","RecordAudio","console","log","start","file","getPCMBlob","file_len","size","base64","token","format","rate","channel","cuid","dev_pid","speech","len","url","data","config","headers","post","then","response"],"sources":["D:/javafile/LightControl/src/views/IndexPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-button type=\"button\" @click=\"RecordAudio\">语音控制</el-button>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Recorder from \"js-audio-recorder\";\r\nimport axios from \"axios\";\r\nlet button = false;\r\n\r\nconst blobToBase64 = (blob, callback) => {\r\n  const reader = new FileReader();\r\n  reader.onload = function (result) {\r\n    const base64String = window.btoa(\r\n        String.fromCharCode(...new Uint8Array(result.target.result))\r\n    );\r\n    callback(base64String);\r\n  };\r\n  reader.readAsArrayBuffer(blob);\r\n};\r\n\r\nconst recorder = new Recorder({\r\n  sampleBits: 16,\r\n  sampleRate: 16000,\r\n  numChannels: 1,\r\n});\r\n\r\nconst RecordAudio = () => {\r\n    console.log(\"开始录音\")\r\n    recorder.start()\r\n    \r\n    console.log(\"停止录音\");\r\n    const file = recorder.getPCMBlob();\r\n    const file_len = file.size;\r\n    blobToBase64(file, (base64String) => {\r\n      const base64 = base64String;\r\n      const token = '24.19950bee43802d550f29b4d12c5015e3.2592000.1702287353.282335-42750245'\r\n      const format = 'pcm';\r\n      const rate = 16000;\r\n      const channel = 1;\r\n      const cuid = '5Bg3dVi0WNfWISubL00qxugrCQX5q5NN';\r\n      const dev_pid =  1537;\r\n      const speech = base64;\r\n      const len = file_len;\r\n      const url = 'api0/server_api'\r\n      const data = {\r\n        token: token,\r\n        format: format,\r\n        rate: rate,\r\n        channel: channel,\r\n        cuid: cuid,\r\n        dev_pid: dev_pid,\r\n        speech: speech,\r\n        len: len\r\n      };\r\n      const config = {\r\n        headers: {\r\n          \"Accept\": \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n      axios.post(url, data, config).then(response => {\r\n        console.log(response.data.result[0])\r\n      })\r\n    });\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n</style>"],"mappings":";;;;;;;;AAQA,OAAOA,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,KAAK,MAAM,OAAO;;;;;;;IACzB,IAAIC,MAAM,GAAG,KAAK;IAElB,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;MACvC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,UAAUC,MAAM,EAAE;QAChC,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAC5BC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIC,UAAU,CAACN,MAAM,CAACO,MAAM,CAACP,MAAM,CAAC,CAC/D,CAAC;QACDJ,QAAQ,CAACK,YAAY,CAAC;MACxB,CAAC;MACDJ,MAAM,CAACW,iBAAiB,CAACb,IAAI,CAAC;IAChC,CAAC;IAED,MAAMc,QAAQ,GAAG,IAAIlB,QAAQ,CAAC;MAC5BmB,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACtBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBN,QAAQ,CAACO,KAAK,CAAC,CAAC;MAEhBF,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,MAAME,IAAI,GAAGR,QAAQ,CAACS,UAAU,CAAC,CAAC;MAClC,MAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAI;MAC1B1B,YAAY,CAACuB,IAAI,EAAGhB,YAAY,IAAK;QACnC,MAAMoB,MAAM,GAAGpB,YAAY;QAC3B,MAAMqB,KAAK,GAAG,wEAAwE;QACtF,MAAMC,MAAM,GAAG,KAAK;QACpB,MAAMC,IAAI,GAAG,KAAK;QAClB,MAAMC,OAAO,GAAG,CAAC;QACjB,MAAMC,IAAI,GAAG,kCAAkC;QAC/C,MAAMC,OAAO,GAAI,IAAI;QACrB,MAAMC,MAAM,GAAGP,MAAM;QACrB,MAAMQ,GAAG,GAAGV,QAAQ;QACpB,MAAMW,GAAG,GAAG,iBAAiB;QAC7B,MAAMC,IAAI,GAAG;UACXT,KAAK,EAAEA,KAAK;UACZC,MAAM,EAAEA,MAAM;UACdC,IAAI,EAAEA,IAAI;UACVC,OAAO,EAAEA,OAAO;UAChBC,IAAI,EAAEA,IAAI;UACVC,OAAO,EAAEA,OAAO;UAChBC,MAAM,EAAEA,MAAM;UACdC,GAAG,EAAEA;QACP,CAAC;QACD,MAAMG,MAAM,GAAG;UACbC,OAAO,EAAE;YACP,QAAQ,EAAE,kBAAkB;YAC5B,cAAc,EAAE;UAClB;QACF,CAAC;QACDzC,KAAK,CAAC0C,IAAI,CAACJ,GAAG,EAAEC,IAAI,EAAEC,MAAM,CAAC,CAACG,IAAI,CAACC,QAAQ,IAAI;UAC7CtB,OAAO,CAACC,GAAG,CAACqB,QAAQ,CAACL,IAAI,CAAC/B,MAAM,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC;MACJ,CAAC,CAAC;IACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}