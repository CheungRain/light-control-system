{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"light-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"light-status\"\n};\nconst _hoisted_4 = {\n  class: \"light-switch\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_title = _resolveComponent(\"el-title\");\n  const _component_el_text = _resolveComponent(\"el-text\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_title, null, {\n    default: _withCtx(() => [_createTextVNode(\"测试\")]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.lights, light => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: light.id,\n      class: \"light\"\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, _toDisplayString(light.name), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(light.isOn ? '已开启' : '已关闭'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_createVNode($setup[\"ElSwitch\"], {\n      modelValue: light.isOn,\n      \"onUpdate:modelValue\": $event => light.isOn = $event,\n      \"active-value\": 1,\n      \"inactive-value\": 0,\n      \"active-color\": \"#13ce66\",\n      \"inactive-color\": \"#ff4949\"\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]), _createElementVNode(\"div\", {\n      class: \"light-timer-countdown\",\n      onClick: $event => light.showTimerDialog = true\n    }, [light.timerStatus === true && light.isTimerOnOff === 1 ? (_openBlock(), _createBlock(_component_el_text, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 还有\" + _toDisplayString(light.timerTimeCopy) + \"秒开启 \", 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : light.timerStatus === true && light.isTimerOnOff === 0 ? (_openBlock(), _createBlock(_component_el_text, {\n      key: 1\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 还有\" + _toDisplayString(light.timerTimeCopy) + \"秒关闭 \", 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createBlock(_component_el_text, {\n      key: 2\n    }, {\n      default: _withCtx(() => [_hoisted_6]),\n      _: 1 /* STABLE */\n    }))], 8 /* PROPS */, _hoisted_5)]), _createVNode($setup[\"ElDialog\"], {\n      modelValue: light.showTimerDialog,\n      \"onUpdate:modelValue\": $event => light.showTimerDialog = $event,\n      title: \"设置定时\",\n      onClose: $event => light.showTimerDialog = false\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ElForm\"], null, {\n        default: _withCtx(() => [_createVNode($setup[\"ElFormItem\"], {\n          label: \"定时开关\"\n        }, {\n          default: _withCtx(() => [_createVNode($setup[\"ElSelect\"], {\n            modelValue: light.isTimerOnOff,\n            \"onUpdate:modelValue\": $event => light.isTimerOnOff = $event,\n            placeholder: \"定时开关\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.onOff, item => {\n              return _openBlock(), _createBlock($setup[\"ElOption\"], {\n                key: item.value,\n                label: item.label,\n                value: item.value\n              }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n            }), 128 /* KEYED_FRAGMENT */))]),\n\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */), _createVNode($setup[\"ElFormItem\"], {\n          label: \"定时时间\"\n        }, {\n          default: _withCtx(() => [_createVNode($setup[\"ElSelect\"], {\n            modelValue: light.timerTime,\n            \"onUpdate:modelValue\": $event => light.timerTime = $event,\n            placeholder: \"定时时间\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.timerChoices, item => {\n              return _openBlock(), _createBlock($setup[\"ElOption\"], {\n                key: item.value,\n                label: item.label,\n                value: item.value\n              }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n            }), 128 /* KEYED_FRAGMENT */))]),\n\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */), _createVNode($setup[\"ElButton\"], {\n          onClick: $event => $setup.confirmTime(light)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"确认\")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode($setup[\"ElButton\"], {\n          onClick: $event => $setup.cancelTime(light)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"取消\")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onClose\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createVNode","_component_el_title","_hoisted_1","_createElementBlock","_Fragment","_renderList","$setup","lights","light","key","id","_hoisted_2","_hoisted_3","_toDisplayString","name","isOn","_hoisted_4","$event","onClick","showTimerDialog","timerStatus","isTimerOnOff","_createBlock","_component_el_text","timerTimeCopy","_hoisted_6","title","onClose","label","placeholder","onOff","item","value","timerTime","timerChoices","confirmTime","cancelTime"],"sources":["D:\\javafile\\LightControl\\src\\views\\testPage.vue"],"sourcesContent":["<template>\r\n  <el-title>测试</el-title>\r\n  <div class=\"container\">\r\n    <div v-for=\"light in lights\" :key=\"light.id\" class=\"light\">\r\n      <div class=\"light-wrapper\" >\r\n        <div class=\"light-status\">\r\n          <div>{{ light.name }}</div>\r\n          <div>{{ light.isOn ? '已开启' : '已关闭' }}</div>\r\n        </div>\r\n        <div class=\"light-switch\">\r\n          <el-switch\r\n              v-model=\"light.isOn\"\r\n              :active-value=\"1\"\r\n              :inactive-value=\"0\"\r\n              active-color=\"#13ce66\"\r\n              inactive-color=\"#ff4949\"></el-switch>\r\n        </div>\r\n        <div class=\"light-timer-countdown\" @click=\"light.showTimerDialog = true\">\r\n          <el-text v-if=\"light.timerStatus===true && light.isTimerOnOff===1\">\r\n            还有{{light.timerTimeCopy}}秒开启\r\n          </el-text>\r\n          <el-text v-else-if=\"light.timerStatus===true && light.isTimerOnOff===0\">\r\n            还有{{light.timerTimeCopy}}秒关闭\r\n          </el-text>\r\n          <el-text v-else>\r\n            <br>\r\n          </el-text>\r\n        </div>\r\n      </div>\r\n\r\n      <el-dialog v-model=\"light.showTimerDialog\" title=\"设置定时\" @close=\"light.showTimerDialog = false\">\r\n        <el-form>\r\n          <el-form-item label=\"定时开关\">\r\n            <el-select v-model=\"light.isTimerOnOff\" placeholder=\"定时开关\">\r\n              <el-option v-for=\"item in onOff\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"定时时间\">\r\n            <el-select v-model=\"light.timerTime\" placeholder=\"定时时间\">\r\n              <el-option v-for=\"item in timerChoices\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-button @click=\"confirmTime(light)\">确认</el-button>\r\n          <el-button @click=\"cancelTime(light)\">取消</el-button>\r\n        </el-form>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { ElSwitch, ElButton, ElDialog, ElForm, ElFormItem, ElSelect, ElOption, ElMessage } from 'element-plus';\r\n\r\nElMessage.success('欢迎登录');\r\n\r\nconst lights = ref([\r\n  {\r\n    id: 1,\r\n    name: '灯1',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '灯2',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '灯3',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '灯4',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '灯5',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false\r\n  }\r\n]);\r\n\r\nconst timerChoices = ref([\r\n  {\r\n    label: '10秒',\r\n    value: 10\r\n  },\r\n  {\r\n    label: '30秒',\r\n    value: 30\r\n  },\r\n  {\r\n    label: '60秒',\r\n    value: 60\r\n  }\r\n]);\r\n\r\nconst onOff = ref([\r\n  {\r\n    label: '定时开',\r\n    value: 1\r\n  },\r\n  {\r\n    label: '定时关',\r\n    value: 0\r\n  }\r\n]);\r\n\r\nconst cancelTime = (light) =>{\r\n  light.isTimerOnOff = null;\r\n  light.timerTime = null;\r\n  light.timerStatus = false;\r\n  light.showTimerDialog = false;\r\n  ElMessage.success(\"取消定时成功\")\r\n};\r\n\r\nconst confirmTime = (light) => {\r\n  if (light.isTimerOnOff !== null && light.timerTime !== null) {\r\n    ElMessage.success(\"定时成功\")\r\n    light.showTimerDialog = false;\r\n    light.timerStatus = true;\r\n    light.timerTimeCopy = light.timerTime;\r\n    const timerInterval = setInterval(() => {\r\n      if (light.timerTimeCopy > 1) {\r\n        light.timerTimeCopy--;\r\n      } else {\r\n        clearInterval(timerInterval);\r\n        light.timerStatus = false;\r\n        light.isOn = light.isTimerOnOff;\r\n      }\r\n    }, 1000);\r\n  }else{\r\n    ElMessage.error(\"请选择定时开关和定时时间\")\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #fff;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  background-color: white;\r\n}\r\n\r\n.light {\r\n  width: 300px;\r\n  height: auto;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.light-wrapper {\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  background-color: #fff;\r\n}\r\n\r\n.light-status {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.light-switch {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}