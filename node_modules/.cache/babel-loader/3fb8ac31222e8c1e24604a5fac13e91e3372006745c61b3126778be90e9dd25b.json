{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"all-con\"\n};\nconst _hoisted_2 = {\n  class: \"user-account\"\n};\nconst _hoisted_3 = {\n  class: \"msg-con\"\n};\nconst _hoisted_4 = {\n  class: \"messages\"\n};\nconst _hoisted_5 = {\n  class: \"sender\"\n};\nconst _hoisted_6 = {\n  class: \"content\"\n};\nconst _hoisted_7 = {\n  class: \"input-container\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-message\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, \"当前用户: \" + _toDisplayString($setup.account), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, msg => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: msg.id,\n      class: _normalizeClass([\"msg\", [msg.received ? 'received' : 'sent']])\n    }, [_createElementVNode(\"p\", _hoisted_5, _toDisplayString(msg.sender) + \"---\" + _toDisplayString(msg.time), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(msg.content), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_input, {\n    class: \"input\",\n    modelValue: $setup.inputData,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputData = $event),\n    placeholder: \"请输入要发送的消息\",\n    size: \"large\",\n    clearable: true\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    class: \"send-button\",\n    onClick: $setup.sendMessage,\n    type: \"primary\",\n    loading: _ctx.sending,\n    disabled: $setup.inputData === ''\n  }, {\n    default: _withCtx(() => [_hoisted_8, _createTextVNode(\" 发送 \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\", \"disabled\"]), _createVNode(_component_el_select, {\n    class: \"select-form\",\n    modelValue: $setup.selectForm,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selectForm = $event),\n    placeholder: \"选择发送人\",\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.options, option => {\n      return _openBlock(), _createBlock(_component_el_option, {\n        key: option.value,\n        label: option.label,\n        value: option.value\n      }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$setup","account","_hoisted_3","_hoisted_4","_Fragment","_renderList","messages","msg","key","id","_normalizeClass","received","_hoisted_5","sender","time","_hoisted_6","content","_hoisted_7","_createVNode","_component_el_input","inputData","$event","placeholder","size","clearable","_component_el_button","onClick","sendMessage","type","loading","_ctx","sending","disabled","_hoisted_8","_component_el_select","selectForm","options","option","_createBlock","_component_el_option","value","label"],"sources":["D:\\VUE\\demo\\src\\views\\ChatRoom.vue"],"sourcesContent":["<template>\r\n  <div class=\"all-con\">\r\n    <div class=\"user-account\">当前用户: {{ account }}</div>\r\n    <div class=\"msg-con\">\r\n      <div class=\"messages\">\r\n        <div\r\n            v-for=\"msg in messages\"\r\n            :key=\"msg.id\"\r\n            class=\"msg\"\r\n            :class=\"[msg.received ? 'received' : 'sent']\"\r\n        >\r\n          <p class=\"sender\">{{ msg.sender }}---{{ msg.time }}</p>\r\n          <p class=\"content\">{{ msg.content }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"input-container\">\r\n      <el-input\r\n          class=\"input\"\r\n          v-model=\"inputData\"\r\n          placeholder=\"请输入要发送的消息\"\r\n          size=\"large\"\r\n      :clearable=\"true\"\r\n      />\r\n      <el-button class=\"send-button\"\r\n          @click=\"sendMessage\"\r\n          type=\"primary\"\r\n      :loading=\"sending\"\r\n      :disabled=\"inputData === ''\"\r\n      >\r\n      <i class=\"el-icon-message\"></i> 发送\r\n      </el-button>\r\n      <el-select\r\n          class=\"select-form\"\r\n          v-model=\"selectForm\"\r\n          placeholder=\"选择发送人\"\r\n          size=\"small\"\r\n      >\r\n      <el-option\r\n          v-for=\"option in options\"\r\n          :key=\"option.value\"\r\n          :label=\"option.label\"\r\n          :value=\"option.value\"\r\n      />\r\n      </el-select>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style>\r\n/* 输入框样式 */\r\n.input {\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* 按钮样式 */\r\n.send-button {\r\n  border-radius: 5px;\r\nbackground-color: #4caf68;\r\ncolor: white;  // 字体颜色\r\ntransition: background-color 0.3s;\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: #3d8e5d;\r\n}\r\n\r\n/* 下拉菜单样式 */\r\n.select-form {\r\n  border-radius: 5px;\r\nborder: 1px solid #ccc;\r\npadding: 5px;\r\n}\r\n\r\n/* 添加动画效果 */\r\n.sender,\r\n.content {\r\n  animation: fadeInUp 0.5s ease-in-out;  \r\n}\r\n\r\n@keyframes fadeInUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n</style>\r\n\r\n<script setup>\r\nimport {ElMessage} from \"element-plus\"\r\nimport {onMounted, onUpdated, reactive, ref} from \"vue\"\r\nimport axios from \"@/plugins/axios\"\r\nconst options = reactive([])\r\nconst selectForm = ref('')\r\nconst inputData = ref('')\r\nconst account = sessionStorage.getItem(\"Account\")\r\nconst accountSet = new Set()\r\nlet message = reactive({\r\n  fromWho: \"\",\r\n  toWho: \"\",\r\n  text: \"\",\r\n  date: new Date()\r\n})\r\nconst sendMessage = () => {\r\n  message.fromWho = account\r\n  message.text = inputData.value\r\n  message.toWho = selectForm.value\r\n  message.date = new Date()\r\n  if(message.toWho&&message.text) {\r\n    ws.send(JSON.stringify(message))\r\n    const msg = {sender:account,time:message.date,content: message.text,received: false}\r\n    messages.push(msg)\r\n    inputData.value = \"\"\r\n  }\r\n}\r\nconst messages = reactive([])\r\nconst ws = new WebSocket(\"ws://192.168.1.11:1113/webSocket/\"+account)\r\n//连接建立时\r\nws.onopen = function (evt){\r\n  console.log(\"connect\")\r\n  const url = \"/onlineUsers\"\r\n  const data = {}\r\n  const config = {\r\n    params: {\r\n      account: account\r\n    }\r\n  }\r\n  axios.post(url,data,config)\r\n      .then(response => {\r\n        const nameSet = response.data\r\n        if(nameSet){\r\n          for(let valueAccount of nameSet) {\r\n            const newOption = {label: valueAccount,value: valueAccount}\r\n            if(!accountSet.has(valueAccount)){\r\n              options.push(newOption)\r\n              accountSet.add(valueAccount)\r\n            }\r\n          }\r\n        }\r\n      })\r\n}\r\n\r\n//接收到服务器消息时\r\nws.onmessage = function (evt){\r\n  message = JSON.parse(evt.data)\r\n  if(message.fromWho==\"system_connect_open\") {\r\n    if(message.text!=account) {\r\n      ElMessage.info(message.text + \"上线了\")\r\n      const newOption = {label: message.text, value: message.text}\r\n      if (!accountSet.has(message.text)) {\r\n        options.push(newOption)\r\n      }\r\n      accountSet.add(message.text)\r\n    }\r\n  }else if(message.fromWho==\"system_connect_close\") {\r\n    ElMessage.info(message.text+\"下线了\")\r\n    accountSet.delete(message.text)\r\n    for (const option of options) {\r\n      const index = options.indexOf(option);\r\n      if (option.label === message.text) {\r\n        options.splice(index,1);\r\n        selectForm.value = \"\"\r\n      }\r\n    }\r\n  }else{\r\n    const msg = {sender:message.fromWho,time:new Date(),content: message.text,received: true}\r\n    messages.push(msg)\r\n  }\r\n}\r\n//连接断开时\r\nws.onclose = function (evt){\r\n  console.log(\"close\")\r\n}\r\n//发生错误时\r\nws.onerror = function (evt){\r\n  console.log(\"error\")\r\n}\r\n\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAU;;EAOdA,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAS;;EAInBA,KAAK,EAAC;AAAiB;gCAc1BC,mBAAA,CAA+B;EAA5BD,KAAK,EAAC;AAAiB;;;;;;;uBA7B9BE,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CJF,mBAAA,CAAmD,OAAnDG,UAAmD,EAAzB,QAAM,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,OAAO,kBAC1CN,mBAAA,CAYM,OAZNO,UAYM,GAXJP,mBAAA,CAUM,OAVNQ,UAUM,I,kBATJP,mBAAA,CAQMQ,SAAA,QAAAC,WAAA,CAPYL,MAAA,CAAAM,QAAQ,EAAfC,GAAG;yBADdX,mBAAA,CAQM;MANDY,GAAG,EAAED,GAAG,CAACE,EAAE;MACZf,KAAK,EAAAgB,eAAA,EAAC,KAAK,GACFH,GAAG,CAACI,QAAQ;QAEvBhB,mBAAA,CAAuD,KAAvDiB,UAAuD,EAAAb,gBAAA,CAAlCQ,GAAG,CAACM,MAAM,IAAG,KAAG,GAAAd,gBAAA,CAAGQ,GAAG,CAACO,IAAI,kBAChDnB,mBAAA,CAAwC,KAAxCoB,UAAwC,EAAAhB,gBAAA,CAAlBQ,GAAG,CAACS,OAAO,iB;sCAIvCrB,mBAAA,CA6BM,OA7BNsB,UA6BM,GA5BJC,YAAA,CAMEC,mBAAA;IALEzB,KAAK,EAAC,OAAO;gBACJM,MAAA,CAAAoB,SAAS;+DAATpB,MAAA,CAAAoB,SAAS,GAAAC,MAAA;IAClBC,WAAW,EAAC,WAAW;IACvBC,IAAI,EAAC,OAAO;IACfC,SAAS,EAAE;2CAEZN,YAAA,CAOYO,oBAAA;IAPD/B,KAAK,EAAC,aAAa;IACzBgC,OAAK,EAAE1B,MAAA,CAAA2B,WAAW;IACnBC,IAAI,EAAC,SAAS;IACjBC,OAAO,EAAEC,IAAA,CAAAC,OAAO;IAChBC,QAAQ,EAAEhC,MAAA,CAAAoB,SAAS;;sBAEpB,MAA+B,CAA/Ba,UAA+B,E,iBAAA,MAC/B,E;;8CACAf,YAAA,CAYYgB,oBAAA;IAXRxC,KAAK,EAAC,aAAa;gBACVM,MAAA,CAAAmC,UAAU;+DAAVnC,MAAA,CAAAmC,UAAU,GAAAd,MAAA;IACnBC,WAAW,EAAC,OAAO;IACnBC,IAAI,EAAC;;sBAGL,MAAyB,E,kBAD7B3B,mBAAA,CAKEQ,SAAA,QAAAC,WAAA,CAJmBL,MAAA,CAAAoC,OAAO,EAAjBC,MAAM;2BADjBC,YAAA,CAKEC,oBAAA;QAHG/B,GAAG,EAAE6B,MAAM,CAACG,KAAK;QACjBC,KAAK,EAAEJ,MAAM,CAACI,KAAK;QACnBD,KAAK,EAAEH,MAAM,CAACG"},"metadata":{},"sourceType":"module","externalDependencies":[]}