{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 在指定的标签之外是不起作用的 \"), _createTextVNode(\" \" + _toDisplayString(_ctx.message) + \" \", 1 /* TEXT */), _createCommentVNode(\" 开发环境版本，包含了有帮助的命令行警告 \"), _createCommentVNode(\" Vue会管理el选项命中的元素及其内部的后代元素 \"), _createElementVNode(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString(_ctx.message) + \" \", 1 /* TEXT */), _createElementVNode(\"h2\", null, _toDisplayString(_ctx.message), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","_createCommentVNode","_toDisplayString","_ctx","message","_createElementVNode","_hoisted_1"],"sources":["D:\\VUE\\demo\\src\\App.vue"],"sourcesContent":["\n<template id = \"body\">\n<!-- 在指定的标签之外是不起作用的 -->\n{{message}}\n<!-- 开发环境版本，包含了有帮助的命令行警告 -->\n<!-- Vue会管理el选项命中的元素及其内部的后代元素 -->\n<div id=\"app\">\n  {{message}}\n  <h2>\n    {{message}}\n  </h2>\n</div>\n</template>\n<script>\n  var vue = new Vue({\n    // el:\"#app\", //id选择器\n    // el:\".app\", //类选择器\n    // el: \"div\", // 标签选择器\n    el:\"#body\", // 不能使用HTML和BODY\n    data: {\n      message: \"Hello VUE!\"\n    },\n  })\n</script>\n\n"],"mappings":";;EAMKA,EAAE,EAAC;AAAK;;6DAJbC,mBAAA,oBAAuB,E,iBAAA,GACvB,GAAAC,gBAAA,CAAEC,IAAA,CAAAC,OAAO,IAAE,GACX,iBAAAH,mBAAA,yBAA4B,EAC5BA,mBAAA,8BAAiC,EACjCI,mBAAA,CAKM,OALNC,UAKM,G,kCAJFH,IAAA,CAAAC,OAAO,IAAE,GACX,iBAAAC,mBAAA,CAEK,YAAAH,gBAAA,CADDC,IAAA,CAAAC,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}