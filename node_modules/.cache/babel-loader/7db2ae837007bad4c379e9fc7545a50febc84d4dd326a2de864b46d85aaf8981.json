{"ast":null,"code":"import { ref } from 'vue';\nimport { ElSwitch, ElButton, ElDialog, ElForm, ElFormItem, ElSelect, ElOption, ElMessage } from 'element-plus';\nexport default {\n  __name: 'testPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const lights = ref([{\n      id: 1,\n      name: '灯1',\n      isOn: 0,\n      isTimerOnOff: null,\n      timerTime: null,\n      timerTimeCopy: null,\n      timerStatus: false,\n      showTimerDialog: false\n    }, {\n      id: 2,\n      name: '灯2',\n      isOn: 0,\n      isTimerOnOff: null,\n      timerTime: null,\n      timerTimeCopy: null,\n      timerStatus: false,\n      showTimerDialog: false\n    }, {\n      id: 3,\n      name: '灯3',\n      isOn: 0,\n      isTimerOnOff: null,\n      timerTime: null,\n      timerTimeCopy: null,\n      timerStatus: false,\n      showTimerDialog: false\n    }, {\n      id: 4,\n      name: '灯4',\n      isOn: 0,\n      isTimerOnOff: null,\n      timerTime: null,\n      timerTimeCopy: null,\n      timerStatus: false,\n      showTimerDialog: false\n    }, {\n      id: 5,\n      name: '灯5',\n      isOn: 0,\n      isTimerOnOff: null,\n      timerTime: null,\n      timerTimeCopy: null,\n      timerStatus: false,\n      showTimerDialog: false\n    }]);\n    const timerChoices = ref([{\n      label: '10秒',\n      value: 10\n    }, {\n      label: '30秒',\n      value: 30\n    }, {\n      label: '60秒',\n      value: 60\n    }]);\n    const onOff = ref([{\n      label: '定时开',\n      value: 1\n    }, {\n      label: '定时关',\n      value: 0\n    }]);\n    const cancelTime = light => {\n      light.isTimerOnOff = null;\n      light.timerTime = null;\n      light.timerStatus = false;\n      light.showTimerDialog = false;\n      ElMessage.success(\"取消定时成功\");\n    };\n    const confirmTime = light => {\n      if (light.isTimerOnOff !== null && light.timerTime !== null) {\n        ElMessage.success(\"定时成功\");\n        light.showTimerDialog = false;\n        light.timerStatus = true;\n        light.timerTimeCopy = light.timerTime;\n        const timerInterval = setInterval(() => {\n          if (light.timerTimeCopy > 1) {\n            light.timerTimeCopy--;\n          } else {\n            clearInterval(timerInterval);\n            light.timerStatus = false;\n            light.isOn = light.isTimerOnOff;\n          }\n        }, 1000);\n      } else {\n        ElMessage.error(\"请选择定时开关和定时时间\");\n      }\n    };\n    ElMessage.success('欢迎登录');\n    const __returned__ = {\n      lights,\n      timerChoices,\n      onOff,\n      cancelTime,\n      confirmTime,\n      ref,\n      get ElSwitch() {\n        return ElSwitch;\n      },\n      get ElButton() {\n        return ElButton;\n      },\n      get ElDialog() {\n        return ElDialog;\n      },\n      get ElForm() {\n        return ElForm;\n      },\n      get ElFormItem() {\n        return ElFormItem;\n      },\n      get ElSelect() {\n        return ElSelect;\n      },\n      get ElOption() {\n        return ElOption;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","ElSwitch","ElButton","ElDialog","ElForm","ElFormItem","ElSelect","ElOption","ElMessage","lights","id","name","isOn","isTimerOnOff","timerTime","timerTimeCopy","timerStatus","showTimerDialog","timerChoices","label","value","onOff","cancelTime","light","success","confirmTime","timerInterval","setInterval","clearInterval","error"],"sources":["D:/javafile/LightControl/src/views/testPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div v-for=\"light in lights\" :key=\"light.id\" class=\"light\">\r\n      <div class=\"light-wrapper\">\r\n        <div class=\"light-status\">\r\n          <div class=\"light-name\">{{ light.name }}</div>\r\n          <div class=\"light-state\">{{ light.isOn ? '已开启': '已关闭' }}</div>\r\n        </div>\r\n        <div class=\"light-switch\">\r\n          <el-switch\r\n              v-model=\"light.isOn\"\r\n              :active-value=\"1\"\r\n              :inactive-value=\"0\"\r\n              active-color=\"#13ce66\"\r\n              inactive-color=\"#ff4949\"></el-switch>\r\n        </div>\r\n        <div class=\"light-timer-choose\">\r\n          <el-button @click=\"light.showTimerDialog = true\">设置定时</el-button>\r\n        </div>\r\n        <div class=\"light-timer-countdown\">\r\n          <el-text v-if=\"light.timerStatus===true && light.isTimerOnOff===1\">\r\n            还有{{light.timerTimeCopy}}秒开启\r\n          </el-text>\r\n          <el-text v-else-if=\"light.timerStatus===true && light.isTimerOnOff===0\">\r\n            还有{{light.timerTimeCopy}}秒关闭\r\n          </el-text>\r\n          <el-text v-else>\r\n            <br>\r\n          </el-text>\r\n        </div>\r\n      </div>\r\n\r\n      <el-dialog class=\"light-timer-dialog\" v-model=\"light.showTimerDialog\" title=\"设置定时\" @close=\"light.showTimerDialog = false\">\r\n        <el-form>\r\n          <el-form-item label=\"定时开关\">\r\n            <el-select v-model=\"light.isTimerOnOff\" placeholder=\"定时开关\">\r\n              <el-option v-for=\"item in onOff\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"定时时间\">\r\n            <el-select v-model=\"light.timerTime\" placeholder=\"定时时间\">\r\n              <el-option v-for=\"item in timerChoices\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-button @click=\"confirmTime(light)\">确认</el-button>\r\n          <el-button @click=\"cancelTime(light)\">取消</el-button>\r\n        </el-form>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { ElSwitch, ElButton, ElDialog, ElForm, ElFormItem, ElSelect, ElOption, ElMessage } from 'element-plus';\r\n\r\nconst lights = ref([\r\n  { id: 1, name: '灯1', isOn: 0, isTimerOnOff: null, timerTime: null, timerTimeCopy: null, timerStatus: false, showTimerDialog: false},\r\n  { id: 2, name: '灯2', isOn: 0, isTimerOnOff: null, timerTime: null, timerTimeCopy: null, timerStatus: false, showTimerDialog: false},\r\n  { id: 3, name: '灯3', isOn: 0, isTimerOnOff: null, timerTime: null, timerTimeCopy: null, timerStatus: false, showTimerDialog: false},\r\n  { id: 4, name: '灯4', isOn: 0, isTimerOnOff: null, timerTime: null, timerTimeCopy: null, timerStatus: false, showTimerDialog: false},\r\n  { id: 5, name: '灯5', isOn: 0, isTimerOnOff: null, timerTime: null, timerTimeCopy: null, timerStatus: false, showTimerDialog: false}\r\n]);\r\n\r\nconst timerChoices = ref([\r\n  { label: '10秒', value: 10},\r\n  { label: '30秒', value: 30},\r\n  { label: '60秒', value: 60},\r\n]);\r\n\r\nconst onOff = ref([\r\n  { label: '定时开', value: 1},\r\n  { label: '定时关', value: 0},\r\n]);\r\n\r\nconst cancelTime = (light) =>{\r\n  light.isTimerOnOff = null;\r\n  light.timerTime = null;\r\n  light.timerStatus = false;\r\n  light.showTimerDialog = false;\r\n  ElMessage.success(\"取消定时成功\")\r\n};\r\n\r\nconst confirmTime = (light) => {\r\n  if (light.isTimerOnOff !== null && light.timerTime !== null) {\r\n    ElMessage.success(\"定时成功\")\r\n    light.showTimerDialog = false;\r\n    light.timerStatus = true;\r\n    light.timerTimeCopy = light.timerTime;\r\n    const timerInterval = setInterval(() => {\r\n      if (light.timerTimeCopy > 1) {\r\n        light.timerTimeCopy--;\r\n      } else {\r\n        clearInterval(timerInterval);\r\n        light.timerStatus = false;\r\n        light.isOn = light.isTimerOnOff;\r\n      }\r\n    }, 1000);\r\n  }else{\r\n    ElMessage.error(\"请选择定时开关和定时时间\")\r\n  }\r\n};\r\n\r\nElMessage.success('欢迎登录');\r\n\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.light {\r\n  width: 400px;\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n}\r\n\r\n.light-wrapper {\r\n  border: 10px solid #ffffff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n}\r\n\r\n.light-status {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.light-name {\r\n  color: #333;\r\n}\r\n\r\n.light-state {\r\n  color: #000000;\r\n}\r\n\r\n.light-switch {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.light-timer-choose {\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.light-timer-dialog{\r\n  text-align: center;\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}