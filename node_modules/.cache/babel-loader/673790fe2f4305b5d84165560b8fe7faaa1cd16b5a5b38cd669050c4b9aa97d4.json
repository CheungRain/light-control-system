{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"@/router/index\";\nimport { ElMessage } from \"element-plus\";\nimport { onMounted, reactive, ref } from \"vue\";\nimport axios from \"@/plugins/axios\";\nexport default {\n  __name: 'ChatRoom',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const user = ref('');\n    let sender = ref('');\n    let sendMsg = ref('');\n    const options = reactive([]);\n    const account = sessionStorage.getItem(\"Account\");\n    const ws = new WebSocket(\"ws://192.168.1.11:1113/webSocket/\" + account);\n    const accountSet = new Set();\n    let message = reactive({\n      fromWho: \"\",\n      toWho: \"\",\n      text: \"\",\n      date: new Date()\n    });\n    ws.onopen = function (evt) {\n      console.log(\"connect\");\n      const url = \"/onlineUsers\";\n      const data = {};\n      const config = {\n        params: {\n          account: account\n        }\n      };\n      axios.post(url, data, config).then(response => {\n        const nameSet = response.data;\n        if (nameSet) {\n          for (let valueAccount of nameSet) {\n            const newOption = {\n              label: valueAccount,\n              value: valueAccount\n            };\n            if (!accountSet.has(valueAccount)) {\n              options.push(newOption);\n            }\n            accountSet.add(valueAccount);\n          }\n        }\n      });\n    };\n    const selectForm = ref('');\n    const fasong = () => {\n      message.fromWho = account;\n      message.text = \"hello\";\n      message.toWho = selectForm.value;\n      message.date = new Date();\n      ws.send(JSON.stringify(message));\n    };\n    ws.onmessage = function (evt) {\n      message = JSON.parse(evt.data);\n      sender = message.fromWho;\n      sendMsg = message.text;\n      if (message.fromWho == \"system_connect_open\" && message.text != account) {\n        ElMessage.info(message.text + \"上线了\");\n        const newOption = {\n          label: message.text,\n          value: message.text\n        };\n        if (!accountSet.has(message.text)) {\n          options.push(newOption);\n        }\n        accountSet.add(message.text);\n      } else if (message.fromWho == \"system_connect_close\") {\n        ElMessage.info(message.text + \"下线了\");\n        accountSet.delete(message.text);\n        for (const option of options) {\n          const index = options.indexOf(option);\n          if (option.label === message.text) {\n            options.splice(index, 1);\n            selectForm.value = \"\";\n          }\n        }\n      } else {\n        ElMessage.info(\"来自\" + sender + \"的消息:\" + sendMsg);\n      }\n    };\n    ws.onclose = function (evt) {\n      console.log(\"close\");\n    };\n    const __returned__ = {\n      user,\n      get sender() {\n        return sender;\n      },\n      set sender(v) {\n        sender = v;\n      },\n      get sendMsg() {\n        return sendMsg;\n      },\n      set sendMsg(v) {\n        sendMsg = v;\n      },\n      options,\n      account,\n      ws,\n      accountSet,\n      get message() {\n        return message;\n      },\n      set message(v) {\n        message = v;\n      },\n      selectForm,\n      fasong,\n      get router() {\n        return router;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      onMounted,\n      reactive,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["router","ElMessage","onMounted","reactive","ref","axios","user","sender","sendMsg","options","account","sessionStorage","getItem","ws","WebSocket","accountSet","Set","message","fromWho","toWho","text","date","Date","onopen","evt","console","log","url","data","config","params","post","then","response","nameSet","valueAccount","newOption","label","value","has","push","add","selectForm","fasong","send","JSON","stringify","onmessage","parse","info","delete","option","index","indexOf","splice","onclose"],"sources":["D:/VUE/demo/src/views/ChatRoom.vue"],"sourcesContent":["<template>\r\n  <h1>{{account}}</h1>\r\n  <h1>{{user}}</h1>\r\n  <el-button @click=\"fasong\">发送</el-button>\r\n  <el-select v-model=\"selectForm\" placeholder=\"选择发送人\">\r\n    <el-option v-for=\"option in options\" :key=\"option.value\" :label=\"option.label\" :value=\"option.value\"></el-option>\r\n  </el-select>\r\n</template>\r\n\r\n<script setup>\r\nimport router from \"@/router/index\";\r\nimport {ElMessage} from \"element-plus\"\r\nimport {onMounted, reactive, ref} from \"vue\"\r\nimport axios from \"@/plugins/axios\";\r\nconst user = ref('')\r\nlet sender = ref('')\r\nlet sendMsg = ref('')\r\nconst options = reactive([]);\r\nconst account = sessionStorage.getItem(\"Account\")\r\nconst ws = new WebSocket(\"ws://192.168.1.11:1113/webSocket/\"+account)\r\nconst accountSet = new Set()\r\nlet message = reactive({\r\n  fromWho: \"\",\r\n  toWho: \"\",\r\n  text: \"\",\r\n  date: new Date()\r\n})\r\nws.onopen = function (evt){\r\n  console.log(\"connect\")\r\n  const url = \"/onlineUsers\"\r\n  const data = {}\r\n  const config = {\r\n    params: {\r\n      account: account\r\n    }\r\n  }\r\n  axios.post(url,data,config)\r\n      .then(response => {\r\n        const nameSet = response.data\r\n        if(nameSet){\r\n          for(let valueAccount of nameSet) {\r\n            const newOption = { label: valueAccount, value: valueAccount }\r\n            if(!accountSet.has(valueAccount)) {\r\n              options.push(newOption)\r\n            }\r\n            accountSet.add(valueAccount)\r\n          }\r\n        }\r\n      })\r\n}\r\nconst selectForm = ref('')\r\nconst fasong = () => {\r\n  message.fromWho = account\r\n  message.text = \"hello\"\r\n  message.toWho = selectForm.value\r\n  message.date = new Date()\r\n  ws.send(JSON.stringify(message))\r\n}\r\n\r\nws.onmessage = function (evt){\r\n  message = JSON.parse(evt.data)\r\n  sender = message.fromWho\r\n  sendMsg = message.text\r\n  if(message.fromWho==\"system_connect_open\"  && message.text!=account) {\r\n    ElMessage.info(message.text+\"上线了\")\r\n    const newOption = { label: message.text, value: message.text }\r\n    if(!accountSet.has(message.text)) {\r\n      options.push(newOption)\r\n    }\r\n    accountSet.add(message.text)\r\n  }else if(message.fromWho==\"system_connect_close\") {\r\n    ElMessage.info(message.text+\"下线了\")\r\n    accountSet.delete(message.text)\r\n    for (const option of options) {\r\n      const index = options.indexOf(option);\r\n      if (option.label === message.text) {\r\n        options.splice(index,1);\r\n        selectForm.value = \"\"\r\n      }\r\n    }\r\n  }else{\r\n    ElMessage.info(\"来自\"+sender+\"的消息:\"+sendMsg)\r\n  }\r\n}\r\nws.onclose = function (evt){\r\n  console.log(\"close\")\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}