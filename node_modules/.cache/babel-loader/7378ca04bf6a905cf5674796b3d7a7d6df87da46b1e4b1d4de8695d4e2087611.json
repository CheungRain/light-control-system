{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onMousedown: $setup.startRecognition,\n    onMouseup: $setup.stopRecognition\n  }, \"按住说话\", 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.transcript), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onMousedown","$setup","startRecognition","onMouseup","stopRecognition","_toDisplayString","_ctx","transcript"],"sources":["D:\\javafile\\LightControl\\src\\views\\IndexPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @mousedown=\"startRecognition\" @mouseup=\"stopRecognition\">按住说话</button>\r\n    <div>{{ transcript }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, onMounted, onUnmounted } from 'vue';\r\n\r\nconst state = reactive({\r\n  transcript: '',\r\n  recognition: null\r\n});\r\n\r\nonMounted(() => {\r\n  state.recognition = new webkitSpeechRecognition();\r\n  state.recognition.onresult = onRecognitionResult;\r\n  state.recognition.continuous = true;\r\n  state.recognition.lang = 'zh-CN';\r\n});\r\n\r\nonUnmounted(() => {\r\n  stopRecognition();\r\n});\r\n\r\nfunction onRecognitionResult(event) {\r\n  const lastResultIndex = event.results.length - 1;\r\n  const text = event.results[lastResultIndex][0].transcript;\r\n  state.transcript += text;\r\n}\r\n\r\nfunction startRecognition() {\r\n  state.transcript = '';\r\n  state.recognition.start();\r\n}\r\n\r\nfunction stopRecognition() {\r\n  if (state.recognition) {\r\n    state.recognition.stop();\r\n  }\r\n}\r\n</script>"],"mappings":";;uBACEA,mBAAA,CAGM,cAFJC,mBAAA,CAA8E;IAArEC,WAAS,EAAEC,MAAA,CAAAC,gBAAgB;IAAGC,SAAO,EAAEF,MAAA,CAAAG;KAAiB,MAAI,4BACrEL,mBAAA,CAA2B,aAAAM,gBAAA,CAAnBC,IAAA,CAAAC,UAAU,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}