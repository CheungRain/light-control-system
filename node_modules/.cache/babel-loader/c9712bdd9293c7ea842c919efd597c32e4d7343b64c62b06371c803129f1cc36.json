{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.webclick && _ctx.webclick(...args))\n  }, \"给后台发送消息\");\n}","map":{"version":3,"names":["_createElementBlock","onClick","_cache","args","_ctx","webclick"],"sources":["D:\\VUE\\demo\\src\\pages\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <button @click=\"webclick\">给后台发送消息</button>\r\n</template>\r\n\r\n<script>\r\nvar user = \"Mike\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      ws: null\r\n    }\r\n  },\r\n  created() {\r\n    //连接WebSocket服务端，然后初始化监听事件\r\n    this.ws = new WebSocket(\"ws://localhost:8080/webSocket/\"+user);\r\n    this.wsInit();\r\n\r\n  },\r\n  methods: {\r\n    wsInit() {\r\n\r\n      this.ws.onopen = () => {\r\n        this.ws.send(\"服务已连接\");\r\n        alert(11);\r\n        console.log(this.ws.readyState)\r\n      }\r\n      this.ws.onclose = () => {\r\n        console.log(\"服务器关闭\")\r\n        console.log(this.ws.readyState)\r\n      }\r\n      this.ws.onmessage = (message) => {\r\n        console.log(\"收到服务器消息\")\r\n        console.log(message)\r\n        console.log(this.ws.readyState)\r\n      }\r\n      this.ws.onerror = (error) => {\r\n        console.log(\"报错了\")\r\n        console.log(error)\r\n        console.log(this.ws.readyState)\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;uBACEA,mBAAA,CAA0C;IAAjCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,QAAA,IAAAD,IAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,SAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}