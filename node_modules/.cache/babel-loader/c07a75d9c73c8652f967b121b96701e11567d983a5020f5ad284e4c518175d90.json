{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-room\"\n};\nconst _hoisted_2 = {\n  class: \"user-account\"\n};\nconst _hoisted_3 = {\n  class: \"input-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", _hoisted_2, \"当前用户: \" + _toDisplayString($setup.account), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n    class: \"input\",\n    modelValue: _ctx.inputData,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.inputData = $event),\n    placeholder: \"请输入要发送的消息\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    class: \"send-button\",\n    onClick: _ctx.sendMessage\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"发送\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_el_select, {\n    class: \"select-form\",\n    modelValue: _ctx.selectForm,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.selectForm = $event),\n    placeholder: \"选择发送人\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.options, option => {\n      return _openBlock(), _createBlock(_component_el_option, {\n        key: option.value,\n        label: option.label,\n        value: option.value\n      }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$setup","account","_hoisted_3","_createVNode","_component_el_input","_ctx","inputData","$event","placeholder","_component_el_button","onClick","sendMessage","_component_el_select","selectForm","_Fragment","_renderList","options","option","_createBlock","_component_el_option","key","value","label"],"sources":["D:\\VUE\\demo\\src\\views\\LoginPage.vue"],"sourcesContent":["<!--<template>-->\r\n<!--  <div class=\"hello\">-->\r\n<!--    <div class=\"container\">-->\r\n<!--      <div class=\"card\">-->\r\n<!--        <el-input class=\"input\" v-model=\"account\" placeholder=\"请输入数字\" />-->\r\n<!--        <el-input class=\"input\" show-password v-model=\"password\" placeholder=\"请输入密码\" />-->\r\n<!--        <el-button class=\"button\" @click=\"postLogin\">POST测试</el-button>-->\r\n<!--        <router-link to=\"register\">注册</router-link>-->\r\n<!--        <router-view></router-view>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n<!--</template>-->\r\n<template>\r\n  <div class=\"chat-room\">\r\n    <h1 class=\"user-account\">当前用户: {{ account }}</h1>\r\n    <div class=\"input-container\">\r\n      <el-input class=\"input\" v-model=\"inputData\" placeholder=\"请输入要发送的消息\" />\r\n      <el-button class=\"send-button\" @click=\"sendMessage\">发送</el-button>\r\n    </div>\r\n    <el-select class=\"select-form\" v-model=\"selectForm\" placeholder=\"选择发送人\">\r\n      <el-option v-for=\"option in options\" :key=\"option.value\" :label=\"option.label\" :value=\"option.value\"></el-option>\r\n    </el-select>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.chat-room {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  background-color: #f5f5f5;\r\n  padding: 20px;\r\n}\r\n\r\n.user-account {\r\n  color: #fff;\r\n  background-color: #2c3e50;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.input {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.send-button {\r\n  background-color: #3498db;\r\n  color: #fff;\r\n}\r\n\r\n.select-form {\r\n  width: 200px;\r\n}\r\n\r\n.el-select-dropdown {\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.el-option {\r\n  background-color: #fff;\r\n  color: #333;\r\n}\r\n\r\n.el-option:hover,\r\n.el-option:hover .el-option__label,\r\n.el-option.selected .el-option__label {\r\n  background-color: #3498db;\r\n  color: #fff;\r\n}\r\n\r\n.el-option.highlighted .el-option__label {\r\n  background-color: #2980b9;\r\n  color: #fff;\r\n}\r\n</style>\r\n<script setup>\r\nimport axios from \"@/plugins/axios.js\"\r\nimport { ref } from 'vue'\r\nimport router from \"@/router/index.js\"\r\nimport {ElMessage} from \"element-plus\";\r\nconst account = ref('')\r\nconst password = ref('')\r\n\r\nconst postLogin = () => {\r\n  const url = '/login'\r\n  const data = {};\r\n  const config = {\r\n    params: {\r\n      account: account.value,\r\n      password: password.value\r\n    }\r\n  }\r\n  axios.post(url,data,config).then(response => {\r\n    console.log(response.data)\r\n    if(response.data==\"ERROR\"){\r\n      ElMessage.error(\"账号或密码输入错误\")\r\n    }\r\n    if(response.data==\"SUCCESS\"){\r\n      const token = response.headers.get(\"Authorization\")\r\n      const account = response.headers.get(\"Account\")\r\n      sessionStorage.setItem(\"Authorization\", token)\r\n      sessionStorage.setItem(\"Account\",account)\r\n      ElMessage.success(account+\": 登录成功\")\r\n      router.push('/chatRoom')\r\n    }\r\n\r\n  })\r\n}\r\n</script>\r\n\r\n<style>\r\n.hello {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: linear-gradient(45deg, #4158d0, #c850c0, #ffcc70);\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.container {\r\n  width: 400px;\r\n}\r\n\r\n.card {\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.input {\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.input:focus {\r\n  outline: none;\r\n  border-color: #409EFF;\r\n  box-shadow: 0 0 3px rgba(64, 158, 255, 0.6);\r\n}\r\n\r\n.button {\r\n  margin-top: 10px;\r\n  background-color: #409EFF;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 8px 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.button:hover {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n.button:active {\r\n  background-color: #3a8ee6;\r\n}\r\n\r\n.button:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 3px rgba(64, 158, 255, 0.6);\r\n}\r\n</style>\r\n\r\n"],"mappings":";;EAcOA,KAAK,EAAC;AAAW;;EAChBA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAiB;;;;;;uBAF9BC,mBAAA,CASM,OATNC,UASM,GARJC,mBAAA,CAAiD,MAAjDC,UAAiD,EAAxB,QAAM,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,OAAO,kBACzCJ,mBAAA,CAGM,OAHNK,UAGM,GAFJC,YAAA,CAAsEC,mBAAA;IAA5DV,KAAK,EAAC,OAAO;gBAAUW,IAAA,CAAAC,SAAS;+DAATD,IAAA,CAAAC,SAAS,GAAAC,MAAA;IAAEC,WAAW,EAAC;2CACxDL,YAAA,CAAkEM,oBAAA;IAAvDf,KAAK,EAAC,aAAa;IAAEgB,OAAK,EAAEL,IAAA,CAAAM;;sBAAa,MAAE,C,iBAAF,IAAE,E;;oCAExDR,YAAA,CAEYS,oBAAA;IAFDlB,KAAK,EAAC,aAAa;gBAAUW,IAAA,CAAAQ,UAAU;+DAAVR,IAAA,CAAAQ,UAAU,GAAAN,MAAA;IAAEC,WAAW,EAAC;;sBACnD,MAAyB,E,kBAApCb,mBAAA,CAAiHmB,SAAA,QAAAC,WAAA,CAArFV,IAAA,CAAAW,OAAO,EAAjBC,MAAM;2BAAxBC,YAAA,CAAiHC,oBAAA;QAA3EC,GAAG,EAAEH,MAAM,CAACI,KAAK;QAAGC,KAAK,EAAEL,MAAM,CAACK,KAAK;QAAGD,KAAK,EAAEJ,MAAM,CAACI"},"metadata":{},"sourceType":"module","externalDependencies":[]}