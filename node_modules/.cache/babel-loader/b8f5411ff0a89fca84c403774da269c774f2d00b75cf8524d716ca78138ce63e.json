{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport Recorder from \"js-audio-recorder\";\nexport default {\n  __name: 'IndexPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    function startRecordAudio() {\n      Recorder.getPermission().then(() => {\n        console.log(\"开始录音\");\n        this.recorder.start();\n      }, error => {\n        console.log(`${error.name} : ${error.message}`);\n      });\n    }\n    function stopRecordAudio() {\n      console.log(\"停止录音\");\n      this.recorder.stop();\n    }\n    function playRecordAudio() {\n      console.log(\"播放录音\");\n      this.recorder.play();\n    }\n    function getPCBRecordAudioData() {\n      const pcmBlob = this.recorder.getPCMBlob();\n      console.log(pcmBlob);\n    }\n    function getWAVRecordAudioData() {\n      const wavBlob = this.recorder.getWAVBlob();\n      console.log(wavBlob);\n    }\n    function downloadPCBRecordAudioData() {\n      this.recorder.downloadPCM(\"badao\");\n    }\n    function downloadWAVRecordAudioData() {\n      this.recorder.downloadWAV(\"badao\");\n    }\n    function uploadWAVData(event) {\n      const file = this.recorder.getPCMBlob();\n      console.log(file.size);\n      blobToBase64(file, base64String => {\n        const base64 = base64String;\n        console.log(base64);\n      });\n    }\n    function blobToBase64(blob, callback) {\n      const reader = new FileReader();\n      reader.onload = function (result) {\n        const base64String = window.btoa(String.fromCharCode(...new Uint8Array(result.target.result)));\n        callback(base64String);\n      };\n      reader.readAsArrayBuffer(blob);\n    }\n    const __returned__ = {\n      startRecordAudio,\n      stopRecordAudio,\n      playRecordAudio,\n      getPCBRecordAudioData,\n      getWAVRecordAudioData,\n      downloadPCBRecordAudioData,\n      downloadWAVRecordAudioData,\n      uploadWAVData,\n      blobToBase64,\n      get Recorder() {\n        return Recorder;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Recorder","startRecordAudio","getPermission","then","console","log","recorder","start","error","name","message","stopRecordAudio","stop","playRecordAudio","play","getPCBRecordAudioData","pcmBlob","getPCMBlob","getWAVRecordAudioData","wavBlob","getWAVBlob","downloadPCBRecordAudioData","downloadPCM","downloadWAVRecordAudioData","downloadWAV","uploadWAVData","event","file","size","blobToBase64","base64String","base64","blob","callback","reader","FileReader","onload","result","window","btoa","String","fromCharCode","Uint8Array","target","readAsArrayBuffer"],"sources":["D:/javafile/LightControl/src/views/IndexPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-button type=\"button\" @click=\"startRecordAudio\">开始录音</el-button>\r\n    <h3>录音时长：{{ recorder.duration.toFixed(4) }}</h3>\r\n    <br />\r\n    <el-button type=\"button\" @click=\"stopRecordAudio\">停止录音</el-button>\r\n    <el-button type=\"button\" @click=\"playRecordAudio\">播放录音</el-button>\r\n    <el-button type=\"button\" @click=\"getPCBRecordAudioData\"\r\n    >获取PCB录音数据</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"downloadPCBRecordAudioData\"\r\n    >下载PCB录音文件</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"getWAVRecordAudioData\"\r\n    >获取WAV录音数据</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"downloadWAVRecordAudioData\"\r\n    >下载WAV录音文件</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"uploadWAVData\">上传WAV录音数据</el-button>\r\n    <br />\r\n  </div>\r\n</template>\r\n\r\n```vue\r\n<script setup>\r\nimport Recorder from \"js-audio-recorder\";\r\n\r\nfunction startRecordAudio() {\r\n  Recorder.getPermission().then(\r\n      () => {\r\n        console.log(\"开始录音\");\r\n        this.recorder.start();\r\n      },\r\n      (error) => {\r\n        console.log(`${error.name} : ${error.message}`);\r\n      }\r\n  );\r\n}\r\n\r\nfunction stopRecordAudio() {\r\n  console.log(\"停止录音\");\r\n  this.recorder.stop();\r\n}\r\n\r\nfunction playRecordAudio() {\r\n  console.log(\"播放录音\");\r\n  this.recorder.play();\r\n}\r\n\r\nfunction getPCBRecordAudioData() {\r\n  const pcmBlob = this.recorder.getPCMBlob();\r\n  console.log(pcmBlob);\r\n}\r\n\r\nfunction getWAVRecordAudioData() {\r\n  const wavBlob = this.recorder.getWAVBlob();\r\n  console.log(wavBlob);\r\n}\r\n\r\nfunction downloadPCBRecordAudioData() {\r\n  this.recorder.downloadPCM(\"badao\");\r\n}\r\n\r\nfunction downloadWAVRecordAudioData() {\r\n  this.recorder.downloadWAV(\"badao\");\r\n}\r\n\r\nfunction uploadWAVData(event) {\r\n  const file = this.recorder.getPCMBlob();\r\n  console.log(file.size);\r\n  blobToBase64(file, (base64String) => {\r\n    const base64 = base64String;\r\n    console.log(base64);\r\n  });\r\n}\r\n\r\nfunction blobToBase64(blob, callback) {\r\n  const reader = new FileReader();\r\n  reader.onload = function (result) {\r\n    const base64String = window.btoa(\r\n        String.fromCharCode(...new Uint8Array(result.target.result))\r\n    );\r\n    callback(base64String);\r\n  };\r\n  reader.readAsArrayBuffer(blob);\r\n}\r\n</script>\r\n\r\n\r\n<style scoped lang=\"scss\">\r\n</style>"],"mappings":";;;;;;;;AA0BA,OAAOA,QAAQ,MAAM,mBAAmB;;;;;;;IAExC,SAASC,gBAAgBA,CAAA,EAAG;MAC1BD,QAAQ,CAACE,aAAa,CAAC,CAAC,CAACC,IAAI,CACzB,MAAM;QACJC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnB,IAAI,CAACC,QAAQ,CAACC,KAAK,CAAC,CAAC;MACvB,CAAC,EACAC,KAAK,IAAK;QACTJ,OAAO,CAACC,GAAG,CAAE,GAAEG,KAAK,CAACC,IAAK,MAAKD,KAAK,CAACE,OAAQ,EAAC,CAAC;MACjD,CACJ,CAAC;IACH;IAEA,SAASC,eAAeA,CAAA,EAAG;MACzBP,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,IAAI,CAACC,QAAQ,CAACM,IAAI,CAAC,CAAC;IACtB;IAEA,SAASC,eAAeA,CAAA,EAAG;MACzBT,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,IAAI,CAACC,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACtB;IAEA,SAASC,qBAAqBA,CAAA,EAAG;MAC/B,MAAMC,OAAO,GAAG,IAAI,CAACV,QAAQ,CAACW,UAAU,CAAC,CAAC;MAC1Cb,OAAO,CAACC,GAAG,CAACW,OAAO,CAAC;IACtB;IAEA,SAASE,qBAAqBA,CAAA,EAAG;MAC/B,MAAMC,OAAO,GAAG,IAAI,CAACb,QAAQ,CAACc,UAAU,CAAC,CAAC;MAC1ChB,OAAO,CAACC,GAAG,CAACc,OAAO,CAAC;IACtB;IAEA,SAASE,0BAA0BA,CAAA,EAAG;MACpC,IAAI,CAACf,QAAQ,CAACgB,WAAW,CAAC,OAAO,CAAC;IACpC;IAEA,SAASC,0BAA0BA,CAAA,EAAG;MACpC,IAAI,CAACjB,QAAQ,CAACkB,WAAW,CAAC,OAAO,CAAC;IACpC;IAEA,SAASC,aAAaA,CAACC,KAAK,EAAE;MAC5B,MAAMC,IAAI,GAAG,IAAI,CAACrB,QAAQ,CAACW,UAAU,CAAC,CAAC;MACvCb,OAAO,CAACC,GAAG,CAACsB,IAAI,CAACC,IAAI,CAAC;MACtBC,YAAY,CAACF,IAAI,EAAGG,YAAY,IAAK;QACnC,MAAMC,MAAM,GAAGD,YAAY;QAC3B1B,OAAO,CAACC,GAAG,CAAC0B,MAAM,CAAC;MACrB,CAAC,CAAC;IACJ;IAEA,SAASF,YAAYA,CAACG,IAAI,EAAEC,QAAQ,EAAE;MACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,UAAUC,MAAM,EAAE;QAChC,MAAMP,YAAY,GAAGQ,MAAM,CAACC,IAAI,CAC5BC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIC,UAAU,CAACL,MAAM,CAACM,MAAM,CAACN,MAAM,CAAC,CAC/D,CAAC;QACDJ,QAAQ,CAACH,YAAY,CAAC;MACxB,CAAC;MACDI,MAAM,CAACU,iBAAiB,CAACZ,IAAI,CAAC;IAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}