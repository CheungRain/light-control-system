{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_button, {\n    type: \"button\",\n    onClick: $setup.startRecordAudio\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"开始录音\")]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"h3\", null, \"录音时长：\" + _toDisplayString($setup.recorder.duration.toFixed(4)), 1 /* TEXT */), _hoisted_1, _createVNode(_component_el_button, {\n    type: \"button\",\n    onClick: $setup.stopRecordAudio\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"停止录音\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"button\",\n    onClick: $setup.playRecordAudio\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"播放录音\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"button\",\n    onClick: $setup.getPCBRecordAudioData\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"获取PCB录音数据\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"button\",\n    onClick: $setup.downloadPCBRecordAudioData\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"下载PCB录音文件\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"button\",\n    onClick: $setup.getWAVRecordAudioData\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"获取WAV录音数据\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"button\",\n    onClick: $setup.downloadWAVRecordAudioData\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"下载WAV录音文件\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"button\",\n    onClick: $setup.uploadWAVData\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"上传WAV录音数据\")]),\n    _: 1 /* STABLE */\n  }), _hoisted_2]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createVNode","_component_el_button","type","onClick","$setup","startRecordAudio","_toDisplayString","recorder","duration","toFixed","_hoisted_1","stopRecordAudio","playRecordAudio","getPCBRecordAudioData","downloadPCBRecordAudioData","getWAVRecordAudioData","downloadWAVRecordAudioData","uploadWAVData","_hoisted_2"],"sources":["D:\\javafile\\LightControl\\src\\views\\IndexPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-button type=\"button\" @click=\"startRecordAudio\">开始录音</el-button>\r\n    <h3>录音时长：{{ recorder.duration.toFixed(4) }}</h3>\r\n    <br />\r\n    <el-button type=\"button\" @click=\"stopRecordAudio\">停止录音</el-button>\r\n    <el-button type=\"button\" @click=\"playRecordAudio\">播放录音</el-button>\r\n    <el-button type=\"button\" @click=\"getPCBRecordAudioData\"\r\n    >获取PCB录音数据</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"downloadPCBRecordAudioData\"\r\n    >下载PCB录音文件</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"getWAVRecordAudioData\"\r\n    >获取WAV录音数据</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"downloadWAVRecordAudioData\"\r\n    >下载WAV录音文件</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"uploadWAVData\">上传WAV录音数据</el-button>\r\n    <br />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Recorder from \"js-audio-recorder\";\r\nconst recorder = new Recorder({\r\n  sampleBits: 16, // 采样位数，支持 8 或 16，默认是16\r\n  sampleRate: 16000, // 采样率，支持 11025、16000、22050、24000、44100、48000，根据浏览器默认值，我的chrome是48000\r\n  numChannels: 1, // 声道，支持 1 或 2， 默认是1\r\n  // compiling: false,(0.x版本中生效,1.x增加中)  // 是否边录边转换，默认是false\r\n});\r\n\r\nconst startRecordAudio = () => {\r\n  recorder.start()\r\n}\r\n\r\nconst stopRecordAudio = () => {\r\n  console.log(\"停止录音\");\r\n  recorder.stop();\r\n}\r\n\r\nconst playRecordAudio = () => {\r\n  console.log(\"播放录音\");\r\n  recorder.play();\r\n}\r\n\r\nconst getPCBRecordAudioData = () => {\r\n  const pcmBlob = recorder.getPCMBlob();\r\n  console.log(pcmBlob);\r\n}\r\n\r\nconst getWAVRecordAudioData = () => {\r\n  const wavBlob = recorder.getWAVBlob();\r\n  console.log(wavBlob);\r\n}\r\n\r\nconst downloadPCBRecordAudioData = () => {\r\n  recorder.downloadPCM(\"badao\");\r\n}\r\n\r\nconst downloadWAVRecordAudioData = () => {\r\n  recorder.downloadWAV(\"badao\");\r\n}\r\n\r\nconst uploadWAVData = () => {\r\n  const wavBlob = recorder.getWAVBlob();\r\n  // 创建一个formData对象\r\n  const formData = new FormData()\r\n  // 此处获取到blob对象后需要设置fileName满足当前项目上传需求，其它项目可直接传把blob作为file塞入formData\r\n  const newbolb = new Blob([wavBlob], { type: 'audio/wav' })\r\n  //获取当时时间戳作为文件名\r\n  const fileOfBlob = new File([newbolb], new Date().getTime() + '.wav')\r\n  formData.append('file', fileOfBlob)\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n</style>"],"mappings":";gCAIIA,mBAAA,CAAM;gCAgBNA,mBAAA,CAAM;;;;uBAnBRC,mBAAA,CAoBM,cAnBJC,YAAA,CAAmEC,oBAAA;IAAxDC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAEC,MAAA,CAAAC;;sBAAkB,MAAI,C,iBAAJ,MAAI,E;;MACvDP,mBAAA,CAAgD,YAA5C,OAAK,GAAAQ,gBAAA,CAAGF,MAAA,CAAAG,QAAQ,CAACC,QAAQ,CAACC,OAAO,qBACrCC,UAAM,EACNV,YAAA,CAAkEC,oBAAA;IAAvDC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAEC,MAAA,CAAAO;;sBAAiB,MAAI,C,iBAAJ,MAAI,E;;MACtDX,YAAA,CAAkEC,oBAAA;IAAvDC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAEC,MAAA,CAAAQ;;sBAAiB,MAAI,C,iBAAJ,MAAI,E;;MACtDZ,YAAA,CAECC,oBAAA;IAFUC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAEC,MAAA,CAAAS;;sBAChC,MAAS,C,iBAAT,WAAS,E;;MAEVb,YAAA,CAECC,oBAAA;IAFUC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAEC,MAAA,CAAAU;;sBAChC,MAAS,C,iBAAT,WAAS,E;;MAEVd,YAAA,CAECC,oBAAA;IAFUC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAEC,MAAA,CAAAW;;sBAChC,MAAS,C,iBAAT,WAAS,E;;MAEVf,YAAA,CAECC,oBAAA;IAFUC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAEC,MAAA,CAAAY;;sBAChC,MAAS,C,iBAAT,WAAS,E;;MAEVhB,YAAA,CAAqEC,oBAAA;IAA1DC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAEC,MAAA,CAAAa;;sBAAe,MAAS,C,iBAAT,WAAS,E;;MACzDC,UAAM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}