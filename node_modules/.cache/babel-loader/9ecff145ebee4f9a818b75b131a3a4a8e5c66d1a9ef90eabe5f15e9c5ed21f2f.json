{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"card\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n    class: \"input\",\n    modelValue: $data.number,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.number = $event),\n    placeholder: \"请输入数字\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_input, {\n    class: \"input\",\n    \"show-password\": \"\",\n    modelValue: $data.password,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"请输入密码\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    class: \"button\",\n    onClick: $options.postPerson\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"POST测试\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_router_link, {\n    to: \"login\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"登录\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_view)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_input","$data","number","$event","placeholder","password","_component_el_button","onClick","$options","postPerson","_component_router_link","to","_component_router_view"],"sources":["D:\\VUE\\demo\\src\\pages\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <div class=\"container\">\r\n      <div class=\"card\">\r\n        <el-input class=\"input\" v-model=\"number\" placeholder=\"请输入数字\" />\r\n        <el-input class=\"input\" show-password v-model=\"password\" placeholder=\"请输入密码\" />\r\n        <el-button class=\"button\" @click=\"postPerson\">POST测试</el-button>\r\n        <router-link to=\"login\">登录</router-link>\r\n        <router-view></router-view>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: 'RegisterPage',\r\n  data() {\r\n    return {\r\n      number: \"\",\r\n      password: \"\"\r\n    }\r\n  },\r\n  methods: {\r\n    postPerson() {\r\n      axios({\r\n        method: 'post',\r\n        url: '/login',\r\n        params: {\r\n          'account': this.number,\r\n          'password': this.password\r\n        }\r\n      }).then(res=>  {\r\n        console.log(res.data)\r\n      }).catch(err=> {\r\n        console.log(err.data)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAM;;;;;;uBAFrBC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,CAQM,OARNC,UAQM,GAPJD,mBAAA,CAMM,OANNE,UAMM,GALJC,YAAA,CAA+DC,mBAAA;IAArDP,KAAK,EAAC,OAAO;gBAAUQ,KAAA,CAAAC,MAAM;+DAAND,KAAA,CAAAC,MAAM,GAAAC,MAAA;IAAEC,WAAW,EAAC;2CACrDL,YAAA,CAA+EC,mBAAA;IAArEP,KAAK,EAAC,OAAO;IAAC,eAAa,EAAb,EAAa;gBAAUQ,KAAA,CAAAI,QAAQ;+DAARJ,KAAA,CAAAI,QAAQ,GAAAF,MAAA;IAAEC,WAAW,EAAC;2CACrEL,YAAA,CAAgEO,oBAAA;IAArDb,KAAK,EAAC,QAAQ;IAAEc,OAAK,EAAEC,QAAA,CAAAC;;sBAAY,MAAM,C,iBAAN,QAAM,E;;kCACpDV,YAAA,CAAwCW,sBAAA;IAA3BC,EAAE,EAAC;EAAO;sBAAC,MAAE,C,iBAAF,IAAE,E;;MAC1BZ,YAAA,CAA2Ba,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}