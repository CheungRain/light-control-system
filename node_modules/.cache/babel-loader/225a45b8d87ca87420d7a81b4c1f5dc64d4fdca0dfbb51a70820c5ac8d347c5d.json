{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Web Socket\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, [_createTextVNode(\"聊天框 \"), _withDirectives(_createElementVNode(\"textarea\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.word = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.word]])]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.login('zhangsan'))\n  }, \"张三登录\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.login('李四'))\n  }, \"李四登录\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.send && _ctx.send(...args))\n  }, \"发送\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","type","$setup","word","$event","onClick","_cache","login","args","_ctx","send"],"sources":["D:\\VUE\\demo\\src\\pages\\LoginPage.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\nimport {toLogin} from '../http/index'\r\n\r\nlet word = ref('')\r\nconst data = {\r\n  username:'zhangsan',\r\n  password:'123'\r\n}\r\nconst login = (name) => {\r\n  toLogin(data).then(res => {\r\n    console.log(res);\r\n    init(name)\r\n  }).catch(err => {\r\n    console.log(err);\r\n  })\r\n}\r\nconst init = (name) => {\r\n  if(typeof(WebSocket) === \"undefined\"){\r\n    alert(\"您的浏览器不支持socket\")\r\n  }else{\r\n    const ws = new WebSocket(`ws://192.168.2.19:8080/chat/${name}`)\r\n    //  //连接发生错误的回调方法\r\n    ws.onerror = function () {\r\n      console.log(\"ws连接发生错误\");\r\n    };\r\n    //连接成功建立的回调方法\r\n    ws.onopen = function () {\r\n      console.log(\"ws连接成功\");\r\n    }\r\n    //接收到消息的回调方法\r\n    ws.onmessage = function (event) {\r\n      console.log(name + '的',event.data);\r\n    }\r\n    //连接关闭的回调方法\r\n    ws.onclose = function () {\r\n      console.log(\"ws连接关闭\");\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <h1>Web Socket</h1>\r\n  <div>聊天框 <textarea type=\"text\" v-model=\"word\" ></textarea></div>\r\n  <button @click=\"login('zhangsan')\">张三登录</button>\r\n  <button @click=\"login('李四')\">李四登录</button>\r\n  <button @click=\"send\">发送</button>\r\n</template>\r\n\r\n<style scoped>\r\n</style>"],"mappings":";gCA2CEA,mBAAA,CAAmB,YAAf,YAAU;;;6DAAdC,UAAmB,EACnBD,mBAAA,CAAgE,c,iBAA3D,MAAI,G,gBAAAA,mBAAA,CAAiD;IAAvCE,IAAI,EAAC,MAAM;+DAAUC,MAAA,CAAAC,IAAI,GAAAC,MAAA;iDAAJF,MAAA,CAAAC,IAAI,E,KAC5CJ,mBAAA,CAAgD;IAAvCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEF,MAAA,CAAAK,KAAK;KAAc,MAAI,GACvCR,mBAAA,CAA0C;IAAjCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEF,MAAA,CAAAK,KAAK;KAAQ,MAAI,GACjCR,mBAAA,CAAiC;IAAxBM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,IAAA,CAAAC,IAAA,IAAAD,IAAA,CAAAC,IAAA,IAAAF,IAAA,CAAI;KAAE,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}