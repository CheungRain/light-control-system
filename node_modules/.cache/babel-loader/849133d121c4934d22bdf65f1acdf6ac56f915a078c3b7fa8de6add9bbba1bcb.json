{"ast":null,"code":"import { reactive } from 'vue';\nexport default {\n  __name: 'ChatRoom',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const messages = reactive([{\n      id: 2,\n      content: 'Hi, this is a longer message that will automatically increase the height of the chat bubble as the content grows.',\n      received: false\n    }]);\n    const __returned__ = {\n      messages,\n      reactive\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","messages","id","content","received"],"sources":["D:/VUE/demo/src/views/ChatRoom.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-room-outer\">\r\n    <div class=\"chat-room\">\r\n      <div class=\"user-account\">当前用户: {{ account }}</div>\r\n      <div class=\"chat-frame-outer\">\r\n        <div class=\"chat-frame\" ref=\"chatFrame\">\r\n          <div class=\"message-container\">\r\n            <div class=\"messages\">\r\n              <div v-for=\"msg in messages\" :key=\"msg.id\" class=\"msg\" :class=\"[msg.received ? 'received' : 'sent']\">\r\n                <p class=\"sender\">来自 {{ msg.sender }}: {{ msg.time }}</p>\r\n                <p class=\"content\">{{ msg.content }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <el-input class=\"input\" v-model=\"inputData\" placeholder=\"请输入要发送的消息\" />\r\n        <el-button class=\"send-button\" @click=\"sendMessage\">发送</el-button>\r\n        <el-select class=\"select-form\" v-model=\"selectForm\" placeholder=\"选择发送人\">\r\n          <el-option v-for=\"option in options\" :key=\"option.value\" :label=\"option.label\" :value=\"option.value\" />\r\n        </el-select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.chat-room {\r\n  background-color: #f6f6f6;\r\n  padding: 20px;\r\n  max-width: 100%;\r\n  border: 5px solid red;\r\n}\r\n\r\n.message-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  max-height: 400px; /* 添加最大高度，以便控制滚动条出现 */\r\n}\r\n\r\n.message {\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  color: #fff;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.received {\r\n  background-color: #0099ff;\r\n  align-self: flex-start;\r\n  width: 70%;\r\n  max-width: 300px;\r\n}\r\n\r\n.sent {\r\n  background-color: #4caf50;\r\n  align-self: flex-end;\r\n  margin-left: auto;\r\n  width: 70%;\r\n  max-width: 300px;\r\n}\r\n\r\n.content {\r\n  white-space: pre-wrap;\r\n}\r\n</style>\r\n\r\n<script setup>\r\nimport { reactive } from 'vue';\r\n\r\nconst messages = reactive([\r\n  { id: 2, content: 'Hi, this is a longer message that will automatically increase the height of the chat bubble as the content grows.', received: false },\r\n  ]);\r\n</script>"],"mappings":"AAwEA,SAASA,QAAQ,QAAQ,KAAK;;;;;;;IAE9B,MAAMC,QAAQ,GAAGD,QAAQ,CAAC,CACxB;MAAEE,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,mHAAmH;MAAEC,QAAQ,EAAE;IAAM,CAAC,CACvJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}