{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"card\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"input\",\n          modelValue: $setup.number,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.number = $event),\n          placeholder: \"请输入数字\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_input, {\n          class: \"input\",\n          \"show-password\": \"\",\n          modelValue: $setup.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n          placeholder: \"请输入密码\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n          class: \"button\",\n          onClick: $setup.postPerson\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"POST测试\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","_component_el_col","span","_component_el_card","_component_el_input","$setup","number","$event","placeholder","password","_component_el_button","onClick","postPerson"],"sources":["D:\\VUE\\demo\\src\\pages\\IndexPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <el-row>\r\n      <el-col :span=\"8\">\r\n        <el-card class=\"card\">\r\n          <el-input class=\"input\" v-model=\"number\" placeholder=\"请输入数字\" />\r\n          <el-input class=\"input\" show-password v-model=\"password\" placeholder=\"请输入密码\" />\r\n          <el-button class=\"button\" @click=\"postPerson\">POST测试</el-button>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.hello {\r\n  margin: 20px;\r\n}\r\n\r\n.card {\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.input {\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.input:focus {\r\n  outline: none;\r\n  border-color: #409EFF;\r\n  box-shadow: 0 0 3px rgba(64, 158, 255, 0.6);\r\n}\r\n\r\n.button {\r\n  margin-top: 10px;\r\n  background-color: #409EFF;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 8px 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.button:hover {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n.button:active {\r\n  background-color: #3a8ee6;\r\n}\r\n\r\n.button:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 3px rgba(64, 158, 255, 0.6);\r\n}\r\n</style>\r\n\r\n<script setup>\r\nimport axios from \"../plugins/axios.js\"\r\nimport { ref } from 'vue';\r\n\r\nconst password = ref('');\r\nconst number = ref('');\r\n\r\nfunction postPerson() {\r\n  axios.post(\"http://localhost:8080/loginvalidate\", {\r\n\r\n  }, {\r\n    params: {\r\n      username: number.value,\r\n      password: password.value,\r\n    }\r\n  }).then(req => {\r\n    console.log(req.data)\r\n  })\r\n}\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAO;;;;;;;uBAAlBC,mBAAA,CAUM,OAVNC,UAUM,GATJC,YAAA,CAQSC,iBAAA;sBAPP,MAMS,CANTD,YAAA,CAMSE,iBAAA;MANAC,IAAI,EAAE;IAAC;wBACd,MAIU,CAJVH,YAAA,CAIUI,kBAAA;QAJDP,KAAK,EAAC;MAAM;0BACnB,MAA+D,CAA/DG,YAAA,CAA+DK,mBAAA;UAArDR,KAAK,EAAC,OAAO;sBAAUS,MAAA,CAAAC,MAAM;qEAAND,MAAA,CAAAC,MAAM,GAAAC,MAAA;UAAEC,WAAW,EAAC;iDACrDT,YAAA,CAA+EK,mBAAA;UAArER,KAAK,EAAC,OAAO;UAAC,eAAa,EAAb,EAAa;sBAAUS,MAAA,CAAAI,QAAQ;qEAARJ,MAAA,CAAAI,QAAQ,GAAAF,MAAA;UAAEC,WAAW,EAAC;iDACrET,YAAA,CAAgEW,oBAAA;UAArDd,KAAK,EAAC,QAAQ;UAAEe,OAAK,EAAEN,MAAA,CAAAO;;4BAAY,MAAM,C,iBAAN,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}