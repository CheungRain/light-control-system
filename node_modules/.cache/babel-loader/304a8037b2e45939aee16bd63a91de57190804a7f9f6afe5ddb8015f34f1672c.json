{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.account), 1 /* TEXT */), _createElementVNode(\"h1\", null, _toDisplayString($setup.user), 1 /* TEXT */), _createVNode(_component_el_input, {\n    class: \"input\",\n    modelValue: $setup.inputName,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputName = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    onClick: $setup.fasong\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"发送\")]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","$setup","account","user","_createVNode","_component_el_input","class","inputName","$event","_component_el_button","onClick","fasong"],"sources":["D:\\VUE\\demo\\src\\views\\ChatRoom.vue"],"sourcesContent":["<template>\r\n  <h1>{{account}}</h1>\r\n  <h1>{{user}}</h1>\r\n  <el-input class=\"input\" v-model=\"inputName\"  />\r\n  <el-button @click=\"fasong\">发送</el-button>\r\n</template>\r\n\r\n<script setup>\r\nimport router from \"@/router/index\";\r\nimport {ElMessage} from \"element-plus\"\r\nimport {onMounted, reactive, ref} from \"vue\"\r\nconst user = ref('')\r\nconst inputName = ref('')\r\nconst account = sessionStorage.getItem(\"Account\")\r\nconst ws = new WebSocket(\"ws://192.168.1.11:1113/webSocket/\"+account)\r\nlet message = reactive({\r\n  fromWho: \"\",\r\n  toWho: \"\",\r\n  text: \"\",\r\n  date: new Date()\r\n})\r\nws.onopen = function (evt){\r\n  console.log(\"connect\")\r\n}\r\nconst fasong = () => {\r\n  ws.send(JSON.stringify(message))\r\n  //console.log(message)\r\n}\r\nws.onmessage = function (evt){\r\n  message = JSON.parse(evt.data)\r\n  //console.log(message)\r\n  if(message.fromWho==\"system_connect_open\") {\r\n    ElMessage.info(message.text+\"上线了\")\r\n    user.value = message.text\r\n    message.toWho = inputName.value\r\n    message.fromWho = account\r\n    message.text = \"hello\"\r\n    console.log(inputName.value)\r\n    //console.log(name.value)\r\n    //ws.send(JSON.stringify(message))\r\n  }\r\n}\r\nws.onclose = function (evt){\r\n  console.log(\"close\")\r\n}\r\n</script>\r\n"],"mappings":";;;;6DACEA,mBAAA,CAAoB,YAAAC,gBAAA,CAAdC,MAAA,CAAAC,OAAO,kBACbH,mBAAA,CAAiB,YAAAC,gBAAA,CAAXC,MAAA,CAAAE,IAAI,kBACVC,YAAA,CAA+CC,mBAAA;IAArCC,KAAK,EAAC,OAAO;gBAAUL,MAAA,CAAAM,SAAS;+DAATN,MAAA,CAAAM,SAAS,GAAAC,MAAA;2CAC1CJ,YAAA,CAAyCK,oBAAA;IAA7BC,OAAK,EAAET,MAAA,CAAAU;EAAM;sBAAE,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}