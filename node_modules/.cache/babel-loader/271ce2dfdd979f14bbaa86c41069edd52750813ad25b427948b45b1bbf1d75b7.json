{"ast":null,"code":"import { ref } from 'vue';\nimport { ElSwitch, ElButton, ElDialog, ElForm, ElFormItem, ElSelect, ElOption, ElMessage } from 'element-plus';\nimport axios from \"axios\";\nexport default {\n  __name: 'IndexPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    ElMessage.success('欢迎登录');\n    const lights = ref([{\n      id: 1,\n      name: '灯1',\n      isOn: 0,\n      isTimerOnOff: null,\n      timerTime: null,\n      timerTimeCopy: null,\n      timerStatus: false,\n      showTimerDialog: false,\n      timerInterval: null\n    }, {\n      id: 2,\n      name: '灯2',\n      isOn: 0,\n      isTimerOnOff: null,\n      timerTime: null,\n      timerTimeCopy: null,\n      timerStatus: false,\n      showTimerDialog: false,\n      timerInterval: null\n    }, {\n      id: 3,\n      name: '灯3',\n      isOn: 0,\n      isTimerOnOff: null,\n      timerTime: null,\n      timerTimeCopy: null,\n      timerStatus: false,\n      showTimerDialog: false,\n      timerInterval: null\n    }, {\n      id: 4,\n      name: '灯4',\n      isOn: 0,\n      isTimerOnOff: null,\n      timerTime: null,\n      timerTimeCopy: null,\n      timerStatus: false,\n      showTimerDialog: false,\n      timerInterval: null\n    }, {\n      id: 5,\n      name: '灯5',\n      isOn: 0,\n      isTimerOnOff: null,\n      timerTime: null,\n      timerTimeCopy: null,\n      timerStatus: false,\n      showTimerDialog: false,\n      timerInterval: null\n    }]);\n    const timerChoices = ref([{\n      label: '10秒',\n      value: 10\n    }, {\n      label: '20秒',\n      value: 20\n    }, {\n      label: '30秒',\n      value: 30\n    }, {\n      label: '40秒',\n      value: 40\n    }, {\n      label: '50秒',\n      value: 50\n    }, {\n      label: '60秒',\n      value: 60\n    }]);\n    const onOff = ref([{\n      label: '定时开',\n      value: 1\n    }, {\n      label: '定时关',\n      value: 0\n    }]);\n    const switchChange = light => {\n      // const url = 'api'+light.id.toString()+'/led_'+light.id.toString()\n      // const data = {\n      //   button: light.isOn\n      // };\n      // const config = {\n      //   params: data\n      // }\n      // axios.post(url, data, config).then(response => {\n      //   console.log(response.data)\n      // })\n    };\n    const cancelTime = light => {\n      if (light.timerStatus) {\n        // const url = \"\"\n        // const data = {\n        //\n        // };\n        // const config = {\n        //   params: data\n        // }\n        // axios.post(url, data, config).then(response => {\n        //   console.log(response.data)\n        // })\n        clearInterval(light.timerInterval);\n        light.isTimerOnOff = null;\n        light.timerTime = null;\n        light.timerStatus = false;\n        ElMessage.success(light.name.toString() + \"取消定时成功\");\n      } else {\n        ElMessage.error(light.name.toString() + \"还没有设置定时\");\n      }\n      light.showTimerDialog = false;\n    };\n    const confirmTime = light => {\n      if (light.isTimerOnOff !== null && light.timerTime !== null) {\n        // const url = \"\"\n        // const data = {\n        //\n        // };\n        // const config = {\n        //   params: data\n        // }\n        // axios.post(url, data, config).then(response => {\n        //   console.log(response.data)\n        // })\n        ElMessage.success(light.name.toString() + \"定时成功\");\n        light.showTimerDialog = false;\n        light.timerStatus = true;\n        light.timerTimeCopy = light.timerTime;\n        clearInterval(light.timerInterval);\n        light.timerInterval = setInterval(() => {\n          if (light.timerTimeCopy > 1) {\n            light.timerTimeCopy--;\n          } else {\n            clearInterval(light.timerInterval);\n            ElMessage.success(light.name.toString() + \"定时时间到了\");\n            light.timerStatus = false;\n            light.isOn = light.isTimerOnOff;\n          }\n        }, 1000);\n      } else {\n        ElMessage.error(\"请选择定时开关和定时时间\");\n      }\n    };\n    const __returned__ = {\n      lights,\n      timerChoices,\n      onOff,\n      switchChange,\n      cancelTime,\n      confirmTime,\n      ref,\n      get ElSwitch() {\n        return ElSwitch;\n      },\n      get ElButton() {\n        return ElButton;\n      },\n      get ElDialog() {\n        return ElDialog;\n      },\n      get ElForm() {\n        return ElForm;\n      },\n      get ElFormItem() {\n        return ElFormItem;\n      },\n      get ElSelect() {\n        return ElSelect;\n      },\n      get ElOption() {\n        return ElOption;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","ElSwitch","ElButton","ElDialog","ElForm","ElFormItem","ElSelect","ElOption","ElMessage","axios","success","lights","id","name","isOn","isTimerOnOff","timerTime","timerTimeCopy","timerStatus","showTimerDialog","timerInterval","timerChoices","label","value","onOff","switchChange","light","cancelTime","clearInterval","toString","error","confirmTime","setInterval"],"sources":["D:/javafile/LightControl/src/views/IndexPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div v-for=\"light in lights\" :key=\"light.id\" class=\"light\">\r\n      <div :class=\"{'light-wrapper-on': light.isOn, 'light-wrapper-off': !light.isOn}\">\r\n        <div class=\"light-status\" @click=\"light.showTimerDialog = true\">\r\n          <div class=\"light-name\">{{ light.name }}</div>\r\n          <div :class=\"{'on': light.isOn, 'off': !light.isOn}\">\r\n            {{ light.isOn ? '已开启' : '已关闭' }}\r\n          </div>\r\n        </div>\r\n        <div class=\"light-switch\">\r\n          <el-switch\r\n              v-model=\"light.isOn\"\r\n              :active-value=\"1\"\r\n              :inactive-value=\"0\"\r\n              active-color=\"#13ce66\"\r\n              inactive-color=\"#ff4949\"\r\n              @change=\"switchChange(light)\">\r\n          </el-switch>\r\n        </div>\r\n        <div class=\"light-timer-countdown\" @click=\"light.showTimerDialog = true\">\r\n          <el-text class=\"light-timer-countdown-on\" v-if=\"light.timerStatus===true && light.isTimerOnOff===1\">\r\n            还有{{light.timerTimeCopy}}秒开启\r\n          </el-text>\r\n          <el-text class=\"light-timer-countdown-off\" v-else-if=\"light.timerStatus===true && light.isTimerOnOff===0\">\r\n            还有{{light.timerTimeCopy}}秒关闭\r\n          </el-text>\r\n          <el-text v-else>\r\n            <br>\r\n          </el-text>\r\n        </div>\r\n      </div>\r\n      <el-dialog\r\n          class=\"dialog\"\r\n          v-model=\"light.showTimerDialog\"\r\n          title=\"设置定时\"\r\n          @close=\"light.showTimerDialog = false\">\r\n        <el-form>\r\n          <el-form-item label=\"定时开关\">\r\n            <el-select\r\n                class=\"select\"\r\n                v-model=\"light.isTimerOnOff\"\r\n                placeholder=\"请选择\">\r\n              <el-option\r\n                  v-for=\"item in onOff\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"定时时间\">\r\n            <el-select\r\n                class=\"select\"\r\n                v-model=\"light.timerTime\"\r\n                placeholder=\"请选择\">\r\n              <el-option\r\n                  v-for=\"item in timerChoices\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-button class=\"button\" @click=\"confirmTime(light)\">确认</el-button>\r\n          <el-button class=\"button\" @click=\"cancelTime(light)\">取消</el-button>\r\n        </el-form>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { ElSwitch, ElButton, ElDialog, ElForm, ElFormItem, ElSelect, ElOption, ElMessage } from 'element-plus';\r\nimport axios from \"axios\";\r\n\r\nElMessage.success('欢迎登录');\r\n\r\nconst lights = ref([\r\n  {\r\n    id: 1,\r\n    name: '灯1',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false,\r\n    timerInterval: null\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '灯2',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false,\r\n    timerInterval: null\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '灯3',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false,\r\n    timerInterval: null\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '灯4',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false,\r\n    timerInterval: null\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '灯5',\r\n    isOn: 0,\r\n    isTimerOnOff: null,\r\n    timerTime: null,\r\n    timerTimeCopy: null,\r\n    timerStatus: false,\r\n    showTimerDialog: false,\r\n    timerInterval: null\r\n  }\r\n]);\r\n\r\nconst timerChoices = ref([\r\n  {\r\n    label: '10秒',\r\n    value: 10\r\n  },\r\n  {\r\n    label: '20秒',\r\n    value: 20\r\n  },\r\n  {\r\n    label: '30秒',\r\n    value: 30\r\n  },\r\n  {\r\n    label: '40秒',\r\n    value: 40\r\n  },\r\n  {\r\n    label: '50秒',\r\n    value: 50\r\n  },\r\n  {\r\n    label: '60秒',\r\n    value: 60\r\n  }\r\n]);\r\n\r\nconst onOff = ref([\r\n  {\r\n    label: '定时开',\r\n    value: 1\r\n  },\r\n  {\r\n    label: '定时关',\r\n    value: 0\r\n  }\r\n]);\r\n\r\n\r\nconst switchChange = (light) => {\r\n  // const url = 'api'+light.id.toString()+'/led_'+light.id.toString()\r\n  // const data = {\r\n  //   button: light.isOn\r\n  // };\r\n  // const config = {\r\n  //   params: data\r\n  // }\r\n  // axios.post(url, data, config).then(response => {\r\n  //   console.log(response.data)\r\n  // })\r\n}\r\n\r\nconst cancelTime = (light) =>{\r\n  if(light.timerStatus) {\r\n    // const url = \"\"\r\n    // const data = {\r\n    //\r\n    // };\r\n    // const config = {\r\n    //   params: data\r\n    // }\r\n    // axios.post(url, data, config).then(response => {\r\n    //   console.log(response.data)\r\n    // })\r\n    clearInterval(light.timerInterval);\r\n    light.isTimerOnOff = null;\r\n    light.timerTime = null;\r\n    light.timerStatus = false;\r\n    ElMessage.success(light.name.toString() + \"取消定时成功\");\r\n  }else{\r\n    ElMessage.error(light.name.toString()+\"还没有设置定时\")\r\n  }\r\n  light.showTimerDialog = false;\r\n};\r\n\r\nconst confirmTime = (light) => {\r\n  if (light.isTimerOnOff !== null && light.timerTime !== null) {\r\n    // const url = \"\"\r\n    // const data = {\r\n    //\r\n    // };\r\n    // const config = {\r\n    //   params: data\r\n    // }\r\n    // axios.post(url, data, config).then(response => {\r\n    //   console.log(response.data)\r\n    // })\r\n    ElMessage.success(light.name.toString()+\"定时成功\")\r\n    light.showTimerDialog = false;\r\n    light.timerStatus = true;\r\n    light.timerTimeCopy = light.timerTime;\r\n    clearInterval(light.timerInterval);\r\n    light.timerInterval = setInterval(() => {\r\n      if (light.timerTimeCopy > 1) {\r\n        light.timerTimeCopy--;\r\n      } else {\r\n        clearInterval(light.timerInterval);\r\n        ElMessage.success(light.name.toString()+\"定时时间到了\")\r\n        light.timerStatus = false;\r\n        light.isOn = light.isTimerOnOff;\r\n      }\r\n    }, 1000);\r\n  }else{\r\n    ElMessage.error(\"请选择定时开关和定时时间\")\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.light {\r\n  width: 300px;\r\n  height: 125px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.light-wrapper-on {\r\n  border: 1px solid rgba(28, 154, 63, 0.59);\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n}\r\n\r\n.light-wrapper-off {\r\n  border: 1px solid rgba(251, 0, 1, 0.7);\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n}\r\n\r\n.light-status {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.light-name{\r\n  color: orange;\r\n}\r\n\r\n.on{\r\n  color: rgba(0, 128, 0, 0.39);\r\n}\r\n\r\n.off{\r\n  color: rgba(255, 0, 0, 0.41);\r\n}\r\n\r\n.light-switch {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.dialog{\r\n  background-size: auto;\r\n  border-radius: 20px;\r\n  width: 200px;\r\n}\r\n\r\n.light-timer-countdown-on{\r\n  color: rgba(0, 128, 0, 0.39);\r\n}\r\n\r\n.light-timer-countdown-off{\r\n  color: rgba(255, 0, 0, 0.41);\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}