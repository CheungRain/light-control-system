{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a01c3592\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"light-info\"\n};\nconst _hoisted_3 = {\n  class: \"light-status\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.lights, light => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: light.id,\n      class: \"light\"\n    }, [_createElementVNode(\"div\", _hoisted_2, \"灯\" + _toDisplayString(light.id), 1 /* TEXT */), _createVNode(_component_el_switch, {\n      modelValue: light.isOn,\n      \"onUpdate:modelValue\": $event => light.isOn = $event,\n      \"active-value\": 0,\n      \"inactive-value\": 1,\n      \"active-text\": \"开启\",\n      \"inactive-text\": \"关闭\",\n      \"active-color\": \"#13ce66\",\n      \"inactive-color\": \"#ff4949\",\n      onChange: $event => $setup.changeStatus(light.id)\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"]), _createElementVNode(\"div\", _hoisted_3, _toDisplayString(light.isOn ? '已开启' : '已关闭'), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","lights","light","key","id","_createElementVNode","_hoisted_2","_toDisplayString","_createVNode","_component_el_switch","isOn","$event","onChange","changeStatus","_hoisted_3"],"sources":["D:\\javafile\\LightControl\\src\\views\\IndexPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div v-for=\"light in lights\" :key=\"light.id\" class=\"light\">\n      <div class=\"light-info\">灯{{ light.id }}</div>\n      <el-switch\n          v-model=\"light.isOn\"\n          :active-value=\"0\"\n          :inactive-value=\"1\"\n          active-text=\"开启\"\n          inactive-text=\"关闭\"\n          active-color=\"#13ce66\"\n          inactive-color=\"#ff4949\"\n          @change=\"changeStatus(light.id)\">\n      </el-switch>\n      <div class=\"light-status\">{{ light.isOn ? '已开启' : '已关闭' }}</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref} from 'vue';\nimport axios from \"axios\";\n\nlet lights = ref([\n  { id:1,isOn:1 },\n  { id:2,isOn:1 },\n  { id:3,isOn:1 },\n  { id:4,isOn:1 },\n  { id:5,isOn:1 },\n]);\n\nconst changeStatus = (id) =>{\n  const light = lights.value[id-1];\n  console.log(light)\n  const url = '/led'\n  const data = {};\n  const config = {\n    params: {\n      id:light.id,\n      button:light.isOn\n    }\n  }\n  axios.post(url,data,config).then(response => {\n    console.log(response.data)\n  })\n}\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.light {\n  display: flex;\n  align-items: center;\n  margin: 10px;\n}\n\n.light-info {\n  margin-right: 10px;\n}\n\n.light-status {\n  margin-left: 10px;\n}\n\n.timer-label {\n  margin-left: 10px;\n}\n\n.timer-status {\n  margin-left: 10px;\n  font-size: 12px;\n  color: #999;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EAEbA,KAAK,EAAC;AAAY;;EAWlBA,KAAK,EAAC;AAAc;;;uBAb7BC,mBAAA,CAeM,OAfNC,UAeM,I,kBAdJD,mBAAA,CAaME,SAAA,QAAAC,WAAA,CAbeC,MAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAjBN,mBAAA,CAaM;MAbwBO,GAAG,EAAED,KAAK,CAACE,EAAE;MAAET,KAAK,EAAC;QACjDU,mBAAA,CAA6C,OAA7CC,UAA6C,EAArB,GAAC,GAAAC,gBAAA,CAAGL,KAAK,CAACE,EAAE,kBACpCI,YAAA,CASYC,oBAAA;kBARCP,KAAK,CAACQ,IAAI;uCAAVR,KAAK,CAACQ,IAAI,GAAAC,MAAA;MAClB,cAAY,EAAE,CAAC;MACf,gBAAc,EAAE,CAAC;MAClB,aAAW,EAAC,IAAI;MAChB,eAAa,EAAC,IAAI;MAClB,cAAY,EAAC,SAAS;MACtB,gBAAc,EAAC,SAAS;MACvBC,QAAM,EAAAD,MAAA,IAAEX,MAAA,CAAAa,YAAY,CAACX,KAAK,CAACE,EAAE;gFAElCC,mBAAA,CAAgE,OAAhES,UAAgE,EAAAP,gBAAA,CAAnCL,KAAK,CAACQ,IAAI,iC"},"metadata":{},"sourceType":"module","externalDependencies":[]}