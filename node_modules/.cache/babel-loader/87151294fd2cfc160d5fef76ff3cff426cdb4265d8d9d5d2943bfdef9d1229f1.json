{"ast":null,"code":"import router from \"@/router/index\";\nimport { ElMessage } from \"element-plus\";\nimport { onMounted, ref } from \"vue\";\nexport default {\n  __name: 'ChatRoom',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const user = ref('');\n    const name = ref('');\n    const account = sessionStorage.getItem(\"Account\");\n    const ws = new WebSocket(\"ws://192.168.1.11:1113/webSocket/\" + account);\n    let message = {\n      fromWho: \"\",\n      toWho: \"\",\n      text: \"\",\n      date: new Date()\n    };\n    onMounted(() => {\n      ws.onmessage = function (evt) {\n        message = JSON.parse(evt.data);\n        if (message.fromWho == \"system_connect_open\") {\n          ElMessage.info(message.text + \"上线了\");\n          user.value = message.text;\n          message.toWho = name.value;\n          message.fromWho = account;\n          message.text = \"hello\";\n          div.app;\n          ws.send(JSON.stringify(message));\n        }\n        console.log(message);\n      };\n    });\n    const __returned__ = {\n      user,\n      name,\n      account,\n      ws,\n      get message() {\n        return message;\n      },\n      set message(v) {\n        message = v;\n      },\n      get router() {\n        return router;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      onMounted,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["router","ElMessage","onMounted","ref","user","name","account","sessionStorage","getItem","ws","WebSocket","message","fromWho","toWho","text","date","Date","onmessage","evt","JSON","parse","data","info","value","div","app","send","stringify","console","log"],"sources":["D:/VUE/demo/src/views/ChatRoom.vue"],"sourcesContent":["<template>\r\n  <h1>{{account}}</h1>\r\n  <h1>{{user}}</h1>\r\n  <el-input class=\"input\" v-model=\"name\"  />\r\n  <div id=\"div\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport router from \"@/router/index\";\r\nimport {ElMessage} from \"element-plus\"\r\nimport {onMounted, ref} from \"vue\"\r\nconst user = ref('')\r\nconst name = ref('')\r\nconst account = sessionStorage.getItem(\"Account\")\r\nconst ws = new WebSocket(\"ws://192.168.1.11:1113/webSocket/\"+account)\r\nlet message = {\r\n  fromWho: \"\",\r\n  toWho: \"\",\r\n  text: \"\",\r\n  date: new Date()\r\n}\r\nonMounted(() => {\r\n    ws.onmessage = function (evt){\r\n    message = JSON.parse(evt.data)\r\n    if(message.fromWho==\"system_connect_open\") {\r\n      ElMessage.info(message.text+\"上线了\")\r\n      user.value = message.text\r\n      message.toWho = name.value\r\n      message.fromWho = account\r\n      message.text = \"hello\"\r\n      div.app\r\n        ws.send(JSON.stringify(message))\r\n    }\r\n    console.log(message)\r\n  }\r\n\r\n})\r\n</script>\r\n<!--<script>-->\r\n<!--const user = \"\";-->\r\n<!--export default {-->\r\n<!--  data() {-->\r\n<!--    return {-->\r\n<!--      ws: null-->\r\n<!--    }-->\r\n<!--  },-->\r\n<!--  created() {-->\r\n<!--    //连接WebSocket服务端，然后初始化监听事件-->\r\n<!--    this.ws = new WebSocket(\"ws://localhost:8080/webSocket/\"+user)-->\r\n<!--    this.wsInit()-->\r\n\r\n<!--  },-->\r\n<!--  methods: {-->\r\n<!--    wsInit() {-->\r\n<!--      this.ws.onopen = () => {-->\r\n<!--        this.ws.send(\"服务已连接\");-->\r\n<!--        console.log(\"服务器已连接\")-->\r\n<!--      }-->\r\n<!--      this.ws.onclose = () => {-->\r\n<!--        console.log(\"服务器关闭\")-->\r\n<!--      }-->\r\n<!--      this.ws.onmessage = (event) => {-->\r\n<!--        let message = JSON.parse(event.data)-->\r\n<!--        console.log(\"收到服务器消息\")-->\r\n<!--        console.log(message)-->\r\n<!--      }-->\r\n<!--      this.ws.onerror = (event) => {-->\r\n<!--        let error = JSON.parse(event.data)-->\r\n<!--        console.log(\"报错了\")-->\r\n<!--        console.log(error)-->\r\n<!--        console.log(this.ws.readyState)-->\r\n<!--      }-->\r\n\r\n<!--    }-->\r\n<!--  }-->\r\n<!--}-->\r\n<!--</script>-->"],"mappings":"AAQA,OAAOA,MAAM,MAAM,gBAAgB;AACnC,SAAQC,SAAS,QAAO,cAAc;AACtC,SAAQC,SAAS,EAAEC,GAAG,QAAO,KAAK;;;;;;;IAClC,MAAMC,IAAI,GAAGD,GAAG,CAAC,EAAE,CAAC;IACpB,MAAME,IAAI,GAAGF,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMG,OAAO,GAAGC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;IACjD,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,mCAAmC,GAACJ,OAAO,CAAC;IACrE,IAAIK,OAAO,GAAG;MACZC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,IAAIC,IAAI,CAAC;IACjB,CAAC;IACDd,SAAS,CAAC,MAAM;MACZO,EAAE,CAACQ,SAAS,GAAG,UAAUC,GAAG,EAAC;QAC7BP,OAAO,GAAGQ,IAAI,CAACC,KAAK,CAACF,GAAG,CAACG,IAAI,CAAC;QAC9B,IAAGV,OAAO,CAACC,OAAO,IAAE,qBAAqB,EAAE;UACzCX,SAAS,CAACqB,IAAI,CAACX,OAAO,CAACG,IAAI,GAAC,KAAK,CAAC;UAClCV,IAAI,CAACmB,KAAK,GAAGZ,OAAO,CAACG,IAAI;UACzBH,OAAO,CAACE,KAAK,GAAGR,IAAI,CAACkB,KAAK;UAC1BZ,OAAO,CAACC,OAAO,GAAGN,OAAO;UACzBK,OAAO,CAACG,IAAI,GAAG,OAAO;UACtBU,GAAG,CAACC,GAAG;UACLhB,EAAE,CAACiB,IAAI,CAACP,IAAI,CAACQ,SAAS,CAAChB,OAAO,CAAC,CAAC;QACpC;QACAiB,OAAO,CAACC,GAAG,CAAClB,OAAO,CAAC;MACtB,CAAC;IAEH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}