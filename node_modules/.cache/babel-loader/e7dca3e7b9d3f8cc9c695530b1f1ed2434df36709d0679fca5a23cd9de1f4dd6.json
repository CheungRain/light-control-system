{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport Recorder from \"js-audio-recorder\";\nexport default {\n  __name: 'IndexPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const recorder = new Recorder({\n      sampleBits: 16,\n      sampleRate: 16000,\n      numChannels: 1\n    });\n    const startRecordAudio = () => {\n      console.log(\"开始录音\");\n      recorder.start();\n    };\n    const stopRecordAudio = () => {\n      console.log(\"停止录音\");\n      recorder.stop();\n    };\n    const playRecordAudio = () => {\n      console.log(\"播放录音\");\n      recorder.play();\n    };\n    const getPCBRecordAudioData = () => {\n      const pcmBlob = recorder.getPCMBlob();\n      console.log(pcmBlob);\n    };\n    const getWAVRecordAudioData = () => {\n      const wavBlob = recorder.getWAVBlob();\n      console.log(wavBlob);\n    };\n    const downloadPCBRecordAudioData = () => {\n      recorder.downloadPCM(\"badao\");\n    };\n    const downloadWAVRecordAudioData = () => {\n      recorder.downloadWAV(\"badao\");\n    };\n    const uploadWAVData = event => {\n      const file = recorder.getPCMBlob();\n      console.log(file.size);\n      blobToBase64(file, base64String => {\n        const base64 = base64String;\n        console.log(base64);\n      });\n    };\n    const blobToBase64 = (blob, callback) => {\n      const reader = new FileReader();\n      reader.onload = function (result) {\n        const base64String = window.btoa(String.fromCharCode(...new Uint8Array(result.target.result)));\n        callback(base64String);\n      };\n      reader.readAsArrayBuffer(blob);\n    };\n    const __returned__ = {\n      recorder,\n      startRecordAudio,\n      stopRecordAudio,\n      playRecordAudio,\n      getPCBRecordAudioData,\n      getWAVRecordAudioData,\n      downloadPCBRecordAudioData,\n      downloadWAVRecordAudioData,\n      uploadWAVData,\n      blobToBase64,\n      get Recorder() {\n        return Recorder;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Recorder","recorder","sampleBits","sampleRate","numChannels","startRecordAudio","console","log","start","stopRecordAudio","stop","playRecordAudio","play","getPCBRecordAudioData","pcmBlob","getPCMBlob","getWAVRecordAudioData","wavBlob","getWAVBlob","downloadPCBRecordAudioData","downloadPCM","downloadWAVRecordAudioData","downloadWAV","uploadWAVData","event","file","size","blobToBase64","base64String","base64","blob","callback","reader","FileReader","onload","result","window","btoa","String","fromCharCode","Uint8Array","target","readAsArrayBuffer"],"sources":["D:/javafile/LightControl/src/views/IndexPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-button type=\"button\" @click=\"startRecordAudio\">开始录音</el-button>\r\n    <h3>录音时长：{{ recorder.duration.toFixed(4) }}</h3>\r\n    <br />\r\n    <el-button type=\"button\" @click=\"stopRecordAudio\">停止录音</el-button>\r\n    <el-button type=\"button\" @click=\"playRecordAudio\">播放录音</el-button>\r\n    <el-button type=\"button\" @click=\"getPCBRecordAudioData\"\r\n    >获取PCB录音数据</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"downloadPCBRecordAudioData\"\r\n    >下载PCB录音文件</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"getWAVRecordAudioData\"\r\n    >获取WAV录音数据</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"downloadWAVRecordAudioData\"\r\n    >下载WAV录音文件</el-button\r\n    >\r\n    <el-button type=\"button\" @click=\"uploadWAVData\">上传WAV录音数据</el-button>\r\n    <br />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Recorder from \"js-audio-recorder\";\r\n\r\nconst recorder = new Recorder({\r\n  sampleBits: 16,\r\n  sampleRate: 16000,\r\n  numChannels: 1,\r\n});\r\n\r\nconst startRecordAudio = () => {\r\n  console.log(\"开始录音\")\r\n  recorder.start()\r\n};\r\n\r\nconst stopRecordAudio = () => {\r\n  console.log(\"停止录音\");\r\n  recorder.stop();\r\n};\r\n\r\nconst playRecordAudio = () => {\r\n  console.log(\"播放录音\");\r\n  recorder.play();\r\n};\r\n\r\nconst getPCBRecordAudioData = () => {\r\n  const pcmBlob = recorder.getPCMBlob();\r\n  console.log(pcmBlob);\r\n};\r\n\r\nconst getWAVRecordAudioData = () => {\r\n  const wavBlob = recorder.getWAVBlob();\r\n  console.log(wavBlob);\r\n};\r\n\r\nconst downloadPCBRecordAudioData = () => {\r\n  recorder.downloadPCM(\"badao\");\r\n};\r\n\r\nconst downloadWAVRecordAudioData = () => {\r\n  recorder.downloadWAV(\"badao\");\r\n};\r\n\r\nconst uploadWAVData = (event) => {\r\n  const file = recorder.getPCMBlob();\r\n  console.log(file.size);\r\n  blobToBase64(file, (base64String) => {\r\n    const base64 = base64String;\r\n    console.log(base64);\r\n  });\r\n};\r\n\r\nconst blobToBase64 = (blob, callback) => {\r\n  const reader = new FileReader();\r\n  reader.onload = function (result) {\r\n    const base64String = window.btoa(\r\n        String.fromCharCode(...new Uint8Array(result.target.result))\r\n    );\r\n    callback(base64String);\r\n  };\r\n  reader.readAsArrayBuffer(blob);\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n</style>"],"mappings":";;;;;;;;AAyBA,OAAOA,QAAQ,MAAM,mBAAmB;;;;;;;IAExC,MAAMC,QAAQ,GAAG,IAAID,QAAQ,CAAC;MAC5BE,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC7BC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBN,QAAQ,CAACO,KAAK,CAAC,CAAC;IAClB,CAAC;IAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5BH,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBN,QAAQ,CAACS,IAAI,CAAC,CAAC;IACjB,CAAC;IAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5BL,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBN,QAAQ,CAACW,IAAI,CAAC,CAAC;IACjB,CAAC;IAED,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;MAClC,MAAMC,OAAO,GAAGb,QAAQ,CAACc,UAAU,CAAC,CAAC;MACrCT,OAAO,CAACC,GAAG,CAACO,OAAO,CAAC;IACtB,CAAC;IAED,MAAME,qBAAqB,GAAGA,CAAA,KAAM;MAClC,MAAMC,OAAO,GAAGhB,QAAQ,CAACiB,UAAU,CAAC,CAAC;MACrCZ,OAAO,CAACC,GAAG,CAACU,OAAO,CAAC;IACtB,CAAC;IAED,MAAME,0BAA0B,GAAGA,CAAA,KAAM;MACvClB,QAAQ,CAACmB,WAAW,CAAC,OAAO,CAAC;IAC/B,CAAC;IAED,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;MACvCpB,QAAQ,CAACqB,WAAW,CAAC,OAAO,CAAC;IAC/B,CAAC;IAED,MAAMC,aAAa,GAAIC,KAAK,IAAK;MAC/B,MAAMC,IAAI,GAAGxB,QAAQ,CAACc,UAAU,CAAC,CAAC;MAClCT,OAAO,CAACC,GAAG,CAACkB,IAAI,CAACC,IAAI,CAAC;MACtBC,YAAY,CAACF,IAAI,EAAGG,YAAY,IAAK;QACnC,MAAMC,MAAM,GAAGD,YAAY;QAC3BtB,OAAO,CAACC,GAAG,CAACsB,MAAM,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC;IAED,MAAMF,YAAY,GAAGA,CAACG,IAAI,EAAEC,QAAQ,KAAK;MACvC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,UAAUC,MAAM,EAAE;QAChC,MAAMP,YAAY,GAAGQ,MAAM,CAACC,IAAI,CAC5BC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIC,UAAU,CAACL,MAAM,CAACM,MAAM,CAACN,MAAM,CAAC,CAC/D,CAAC;QACDJ,QAAQ,CAACH,YAAY,CAAC;MACxB,CAAC;MACDI,MAAM,CAACU,iBAAiB,CAACZ,IAAI,CAAC;IAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}