{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"card\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n    class: \"input\",\n    modelValue: $setup.account,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.account = $event),\n    placeholder: \"请输入账号\",\n    size: \"large\",\n    clearable: \"\",\n    \"prefix-icon\": 'el-icon-user'\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_input, {\n    class: \"input\",\n    \"show-password\": \"\",\n    modelValue: $setup.password,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    placeholder: \"请输入密码\",\n    size: \"large\",\n    clearable: \"\",\n    \"prefix-icon\": 'el-icon-lock'\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    class: \"button\",\n    onClick: $setup.postRegister,\n    type: \"primary\",\n    round: \"\",\n    loading: _ctx.loading\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"注册 \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_router_view)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_input","$setup","account","$event","placeholder","size","clearable","password","_component_el_button","onClick","postRegister","type","round","loading","_ctx","_component_router_view"],"sources":["D:\\download\\chatroom-master\\chatroom-front\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <div class=\"container\">\n      <div class=\"card\">\n        <el-input\n            class=\"input\"\n            v-model=\"account\"\n            placeholder=\"请输入账号\"\n            size=\"large\"\n        clearable\n        :prefix-icon=\"'el-icon-user'\"\n        />\n        <el-input\n            class=\"input\"\n            show-password\n            v-model=\"password\"\n            placeholder=\"请输入密码\"\n            size=\"large\"\n        clearable\n        :prefix-icon=\"'el-icon-lock'\"\n        />\n        <el-button\n            class=\"button\"\n            @click=\"postRegister\"\n            type=\"primary\"\n        round\n        :loading=\"loading\"\n        >注册\n        </el-button>\n        <router-view></router-view>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport axios from \"@/plugins/axios\"\nimport router from \"@/router/index\"\nimport {ref} from \"vue\"\nimport {ElMessage} from \"element-plus\";\n\nconst account = ref('')\nconst password = ref('')\n\nconst postRegister = () => {\n  const url = '/register'\n  const data = {}\n  const config = {\n    params: {\n      account: account.value,\n      password: password.value\n    }\n  }\n  axios.post(url,data,config)\n      .then(response => {\n        console.log(response.data)\n        if(response.data==\"SUCCESS\"){\n          ElMessage.success(\"注册成功\")\n          router.push('/login')\n        }\n        if(response.data==\"ERROR\"){\n          ElMessage.error(\"账号已存在\")\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n}\n</script>\n\n<style Reset>\n.hello {\n\n  background: linear-gradient(135deg, #00ffb2, #09c4ee, #218af3); /* 使用线性渐变作为背景 */\n  background-size: contain; /* 设置渐变的大小 */\n  animation: gradientAnimation 10s ease infinite; /* 使用动画库添加动画效果 */\n}\n\n@keyframes gradientAnimation {\n  0% {\n    background-position: 0% 50%; /* 背景位置起始点 */\n  }\n  50% {\n    background-position: 100% 50%; /* 背景位置中点 */\n  }\n  100% {\n    background-position: 0% 50%; /* 背景位置结束点 */\n  }\n}\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n\n.card {\n  width: 300px;\n  padding: 20px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n}\n\n.input {\n  margin-bottom: 20px;\n}\n\n.button {\n  width: 100%;\n}\n\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAM;;;;;uBAFrBC,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BJC,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BJD,mBAAA,CA2BM,OA3BNE,UA2BM,GA1BJC,YAAA,CAOEC,mBAAA;IANEP,KAAK,EAAC,OAAO;gBACJQ,MAAA,CAAAC,OAAO;+DAAPD,MAAA,CAAAC,OAAO,GAAAC,MAAA;IAChBC,WAAW,EAAC,OAAO;IACnBC,IAAI,EAAC,OAAO;IAChBC,SAAS,EAAT,EAAS;IACR,aAAW,EAAE;2CAEdP,YAAA,CAQEC,mBAAA;IAPEP,KAAK,EAAC,OAAO;IACb,eAAa,EAAb,EAAa;gBACJQ,MAAA,CAAAM,QAAQ;+DAARN,MAAA,CAAAM,QAAQ,GAAAJ,MAAA;IACjBC,WAAW,EAAC,OAAO;IACnBC,IAAI,EAAC,OAAO;IAChBC,SAAS,EAAT,EAAS;IACR,aAAW,EAAE;2CAEdP,YAAA,CAOYS,oBAAA;IANRf,KAAK,EAAC,QAAQ;IACbgB,OAAK,EAAER,MAAA,CAAAS,YAAY;IACpBC,IAAI,EAAC,SAAS;IAClBC,KAAK,EAAL,EAAK;IACJC,OAAO,EAAEC,IAAA,CAAAD;;sBACT,MACD,C,iBADC,KACD,E;;kCACAd,YAAA,CAA2BgB,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}