{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-room-outer\"\n};\nconst _hoisted_2 = {\n  class: \"chat-room\"\n};\nconst _hoisted_3 = {\n  class: \"user-account\"\n};\nconst _hoisted_4 = {\n  class: \"chat-frame-outer\"\n};\nconst _hoisted_5 = {\n  class: \"chat-frame\",\n  ref: \"chatFrame\"\n};\nconst _hoisted_6 = {\n  class: \"message-container\"\n};\nconst _hoisted_7 = {\n  class: \"messages\"\n};\nconst _hoisted_8 = {\n  class: \"sender\"\n};\nconst _hoisted_9 = {\n  class: \"content\"\n};\nconst _hoisted_10 = {\n  class: \"input-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, \"当前用户: \" + _toDisplayString($setup.account), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, msg => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: msg.id,\n      class: _normalizeClass([\"msg\", [msg.received ? 'received' : 'sent']])\n    }, [_createElementVNode(\"p\", _hoisted_8, \"来自 \" + _toDisplayString(msg.sender) + \": \" + _toDisplayString(msg.time), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_9, _toDisplayString(msg.content), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_input, {\n    class: \"input\",\n    modelValue: $setup.inputData,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputData = $event),\n    placeholder: \"请输入要发送的消息\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    class: \"send-button\",\n    onClick: $setup.sendMessage\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"发送\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_select, {\n    class: \"select-form\",\n    modelValue: $setup.selectForm,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selectForm = $event),\n    placeholder: \"选择发送人\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.options, option => {\n      return _openBlock(), _createBlock(_component_el_option, {\n        key: option.value,\n        label: option.label,\n        value: option.value\n      }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])])])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$setup","account","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_Fragment","_renderList","messages","msg","key","id","_normalizeClass","received","_hoisted_8","sender","time","_hoisted_9","content","_hoisted_10","_createVNode","_component_el_input","inputData","$event","placeholder","_component_el_button","onClick","sendMessage","_component_el_select","selectForm","options","option","_createBlock","_component_el_option","value","label"],"sources":["D:\\VUE\\demo\\src\\views\\ChatRoom.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-room-outer\">\r\n    <div class=\"chat-room\">\r\n      <div class=\"user-account\">当前用户: {{ account }}</div>\r\n      <div class=\"chat-frame-outer\">\r\n        <div class=\"chat-frame\" ref=\"chatFrame\">\r\n          <div class=\"message-container\">\r\n            <div class=\"messages\">\r\n              <div v-for=\"msg in messages\" :key=\"msg.id\" class=\"msg\" :class=\"[msg.received ? 'received' : 'sent']\">\r\n                <p class=\"sender\">来自 {{ msg.sender }}: {{ msg.time }}</p>\r\n                <p class=\"content\">{{ msg.content }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <el-input class=\"input\" v-model=\"inputData\" placeholder=\"请输入要发送的消息\" />\r\n        <el-button class=\"send-button\" @click=\"sendMessage\">发送</el-button>\r\n        <el-select class=\"select-form\" v-model=\"selectForm\" placeholder=\"选择发送人\">\r\n          <el-option v-for=\"option in options\" :key=\"option.value\" :label=\"option.label\" :value=\"option.value\" />\r\n        </el-select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.chat-room {\r\n  background-color: #f6f6f6;\r\n  padding: 20px;\r\n  max-width: 100%;\r\n  border: 5px solid red;\r\n}\r\n\r\n.message-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  max-height: 400px; /* 添加最大高度，以便控制滚动条出现 */\r\n}\r\n\r\n.message {\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  color: #fff;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.received {\r\n  background-color: #0099ff;\r\n  align-self: flex-start;\r\n  width: 70%;\r\n  max-width: 300px;\r\n}\r\n\r\n.sent {\r\n  background-color: #4caf68;\r\n  align-self: flex-end;\r\n  margin-left: auto;\r\n  width: 70%;\r\n  max-width: 300px;\r\n}\r\n.sender{\r\n  color: #fd0000;\r\n}\r\n.content {\r\n  white-space: pre-wrap;\r\n}\r\n</style>\r\n\r\n<script setup>\r\nimport {ElMessage} from \"element-plus\"\r\nimport {onMounted, onUpdated, reactive, ref} from \"vue\"\r\nimport axios from \"@/plugins/axios\"\r\nconst options = reactive([])\r\nconst selectForm = ref('')\r\nconst inputData = ref('')\r\nconst account = sessionStorage.getItem(\"Account\")\r\nconst accountSet = new Set()\r\nlet message = reactive({\r\n  fromWho: \"\",\r\n  toWho: \"\",\r\n  text: \"\",\r\n  date: new Date()\r\n})\r\nconst sendMessage = () => {\r\n  message.fromWho = account\r\n  message.text = inputData.value\r\n  message.toWho = selectForm.value\r\n  message.date = new Date()\r\n  ws.send(JSON.stringify(message))\r\n  const msg = {sender:account,time:message.date,content: message.text,received: false}\r\n  messages.push(msg)\r\n  inputData.value = \"\"\r\n}\r\nconst messages = reactive([])\r\nconst ws = new WebSocket(\"ws://192.168.1.11:1113/webSocket/\"+account)\r\n//连接建立时\r\nws.onopen = function (evt){\r\n  console.log(\"connect\")\r\n  const url = \"/onlineUsers\"\r\n  const data = {}\r\n  const config = {\r\n    params: {\r\n      account: account\r\n    }\r\n  }\r\n  axios.post(url,data,config)\r\n      .then(response => {\r\n        const nameSet = response.data\r\n        if(nameSet){\r\n          for(let valueAccount of nameSet) {\r\n            const newOption = { label: valueAccount, value: valueAccount }\r\n            if(!accountSet.has(valueAccount)) {\r\n              options.push(newOption)\r\n            }\r\n            accountSet.add(valueAccount)\r\n          }\r\n        }\r\n      })\r\n}\r\n\r\n//接收到服务器消息时\r\nws.onmessage = function (evt){\r\n  message = JSON.parse(evt.data)\r\n  if(message.fromWho==\"system_connect_open\") {\r\n    if(message.text!=account) {\r\n      ElMessage.info(message.text + \"上线了\")\r\n      const newOption = {label: message.text, value: message.text}\r\n      if (!accountSet.has(message.text)) {\r\n        options.push(newOption)\r\n      }\r\n      accountSet.add(message.text)\r\n    }\r\n  }else if(message.fromWho==\"system_connect_close\") {\r\n    ElMessage.info(message.text+\"下线了\")\r\n    accountSet.delete(message.text)\r\n    for (const option of options) {\r\n      const index = options.indexOf(option);\r\n      if (option.label === message.text) {\r\n        options.splice(index,1);\r\n        selectForm.value = \"\"\r\n      }\r\n    }\r\n  }else{\r\n    const msg = {sender:message.fromWho,time:message.date,content: message.text,received: true}\r\n    messages.push(msg)\r\n  }\r\n}\r\n//连接断开时\r\nws.onclose = function (evt){\r\n  console.log(\"close\")\r\n}\r\n//发生错误时\r\nws.onerror = function (evt){\r\n  console.log(\"error\")\r\n}\r\n\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC,YAAY;EAACC,GAAG,EAAC;;;EACrBD,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAAU;;EAEdA,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAS;;EAMvBA,KAAK,EAAC;AAAiB;;;;;;uBAfhCE,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJD,mBAAA,CAAmD,OAAnDE,UAAmD,EAAzB,QAAM,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,OAAO,kBAC1CL,mBAAA,CAWM,OAXNM,UAWM,GAVJN,mBAAA,CASM,OATNO,UASM,GARJP,mBAAA,CAOM,OAPNQ,UAOM,GANJR,mBAAA,CAKM,OALNS,UAKM,I,kBAJJX,mBAAA,CAGMY,SAAA,QAAAC,WAAA,CAHaP,MAAA,CAAAQ,QAAQ,EAAfC,GAAG;yBAAff,mBAAA,CAGM;MAHwBgB,GAAG,EAAED,GAAG,CAACE,EAAE;MAAEnB,KAAK,EAAAoB,eAAA,EAAC,KAAK,GAAUH,GAAG,CAACI,QAAQ;QAC1EjB,mBAAA,CAAyD,KAAzDkB,UAAyD,EAAvC,KAAG,GAAAf,gBAAA,CAAGU,GAAG,CAACM,MAAM,IAAG,IAAE,GAAAhB,gBAAA,CAAGU,GAAG,CAACO,IAAI,kBAClDpB,mBAAA,CAAwC,KAAxCqB,UAAwC,EAAAlB,gBAAA,CAAlBU,GAAG,CAACS,OAAO,iB;gEAM3CtB,mBAAA,CAMM,OANNuB,WAMM,GALJC,YAAA,CAAsEC,mBAAA;IAA5D7B,KAAK,EAAC,OAAO;gBAAUQ,MAAA,CAAAsB,SAAS;+DAATtB,MAAA,CAAAsB,SAAS,GAAAC,MAAA;IAAEC,WAAW,EAAC;2CACxDJ,YAAA,CAAkEK,oBAAA;IAAvDjC,KAAK,EAAC,aAAa;IAAEkC,OAAK,EAAE1B,MAAA,CAAA2B;;sBAAa,MAAE,C,iBAAF,IAAE,E;;MACtDP,YAAA,CAEYQ,oBAAA;IAFDpC,KAAK,EAAC,aAAa;gBAAUQ,MAAA,CAAA6B,UAAU;+DAAV7B,MAAA,CAAA6B,UAAU,GAAAN,MAAA;IAAEC,WAAW,EAAC;;sBACnD,MAAyB,E,kBAApC9B,mBAAA,CAAuGY,SAAA,QAAAC,WAAA,CAA3EP,MAAA,CAAA8B,OAAO,EAAjBC,MAAM;2BAAxBC,YAAA,CAAuGC,oBAAA;QAAjEvB,GAAG,EAAEqB,MAAM,CAACG,KAAK;QAAGC,KAAK,EAAEJ,MAAM,CAACI,KAAK;QAAGD,KAAK,EAAEH,MAAM,CAACG"},"metadata":{},"sourceType":"module","externalDependencies":[]}