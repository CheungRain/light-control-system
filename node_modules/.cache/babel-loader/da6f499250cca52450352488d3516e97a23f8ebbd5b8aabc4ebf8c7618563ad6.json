{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport { $post } from \"@/config/http/http\";\nexport default {\n  name: \"voiceToText\",\n  data() {\n    return {\n      tiptext: \"点击录音\",\n      recording: false,\n      // 标记是否在录音\n      intervaltimerid: \"\",\n      // 间隔时间定时器编号\n      recorder: null,\n      time: 0,\n      url: '',\n      //地址\n      mblob: '' //文件\n    };\n  },\n\n  props: {\n    visibility: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {},\n  mounted() {\n    this.init();\n  },\n  methods: {\n    closeVoice() {\n      this.recording = false;\n      clearInterval(this.intervaltimerid);\n      this.recorder.stop();\n      this.tiptext = \"点击录音\";\n      this.$emit('closeVoice', false);\n      console.log('zi');\n    },\n    init() {\n      this.recorder = new MP3Recorder({\n        //numChannels: 1,     //声道数,默认为1\n        sampleRate: 16000,\n        //采样率,一般由设备提供,比如 48000\n        bitRate: 128,\n        //比特率,不要低于64,否则可能录制无声音（人声）\n        //useMediaRecorder: true, //是否使用MediaRecorder录音（不支持转码为mp3文件）\n        //recorderType: \"video/webm;codes=vp9\",  //默认编码，仅 useMediaRecorder 为true且浏览器支持时生效\n        //录音结束事件\n        complete: (blob, ext) => {\n          var url = URL.createObjectURL(blob);\n          this.$emit(\"handleStop\", {\n            url: url,\n            mblob: blob\n          });\n          this.url = url;\n          this.mblob = blob;\n        }\n      });\n    },\n    // 点击处理\n    handleClick() {\n      //录音支持检测\n      console.log(this.recorder.support);\n      if (!this.recorder.support) return;\n      this.recording = !this.recording;\n      this.$emit(\"handleStop\", {\n        url: \"\",\n        mblob: null\n      });\n      if (this.recording) {\n        this.time = 0;\n        this.tiptext = \"正在录音... (\" + this.time + \"s)\";\n        this.recorder.start(this.successFun(), this.errorFun());\n      } else {\n        clearInterval(this.intervaltimerid);\n        this.recorder.stop();\n        this.tiptext = \"点击录音\";\n      }\n    },\n    writeError() {},\n    successFun() {\n      this.intervaltimerid = setInterval(() => {\n        // 开始累积\n        if (this.time == 60) {\n          this.recorder.stop();\n          this.recording = false;\n          this.tiptext = \"点击录音\";\n          console.log(\"对不起，录音只支持60秒以内的语音！\");\n          this.$message({\n            message: '对不起，录音只支持60秒以内的语音！',\n            type: 'warning'\n          });\n          clearInterval(this.intervaltimerid);\n          return false;\n        }\n        this.time = this.time + 1;\n        this.tiptext = \"正在录音... (\" + this.time + \"s)\";\n      }, 1000);\n    },\n    errorFun(e) {\n      // clearInterval(this.intervaltimerid);\n      // switch (e.code || e.name) {\n      //   case \"PERMISSION_DENIED\":\n      //   case \"PermissionDeniedError\":\n      //     // this.writeError(\"用户拒绝提供设备。\");\n      //     break;\n      //   case \"NOT_SUPPORTED_ERROR\":\n      //   case \"NotSupportedError\":\n      //     // this.writeError(\"浏览器不支持硬件设备。\");\n      //     break;\n      //   case \"MANDATORY_UNSATISFIED_ERROR\":\n      //   case \"MandatoryUnsatisfiedError\":\n      //     // this.writeError(\"无法发现指定的硬件设备。\");\n      //     break;\n      //   default:\n      //     // this.writeError(ijutr\n      //     //   \"无法打开麦克风。异常信息:\" + (e.code || e.name)\n      //     // );\n      //     break;\n      // }\n    },\n    setMp3() {\n      // phoneLogin(formData).then((res)=>{\n      //   console.log(res)\n      // })\n      if (!!this.recording) {\n        this.recording = false;\n        clearInterval(this.intervaltimerid);\n        this.recorder.stop();\n        this.tiptext = \"点击录音\";\n      }\n      setTimeout(() => {\n        if (!!!this.mblob) {\n          this.$message.error('请先录音');\n        }\n        //如果这里出现文件报错   请修改record.js中 worker = new Worker(ops.WORKER_PATH || '/js/recorder/recorder-worker.js');\n        console.log(this.mblob);\n        var formData = new FormData();\n        formData.append('file', this.mblob);\n        $post('/public/psBaiduSpeechRecognition/getSpeechRecognition', formData).then(res => {\n          console.log(res.data.result[0]);\n          this.$emit(\"voiceText\", res.data.result[0]);\n          this.mblob = '';\n          this.url = '';\n        });\n      }, 500);\n    }\n  }\n};","map":{"version":3,"names":["$post","name","data","tiptext","recording","intervaltimerid","recorder","time","url","mblob","props","visibility","type","Boolean","default","watch","mounted","init","methods","closeVoice","clearInterval","stop","$emit","console","log","MP3Recorder","sampleRate","bitRate","complete","blob","ext","URL","createObjectURL","handleClick","support","start","successFun","errorFun","writeError","setInterval","$message","message","e","setMp3","setTimeout","error","formData","FormData","append","then","res","result"],"sources":["D:\\javafile\\LightControl\\src\\views\\IndexPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"voiceToText\">\r\n    <div class=\"close\">\r\n      <i class=\"el-icon-close\" @click=\"closeVoice\"></i>\r\n    </div>\r\n    <div class=\"voice-header\">\r\n      请说出搜索信息\r\n    </div>\r\n    <div class=\"wrap-recorder\">\r\n      <div>\r\n        <div id=\"container\">\r\n          <img src=\"../../assets/images/voiceToText/mic.png\" alt=\"\" @click=\"handleClick\">\r\n          <div class='circle circle--3' v-show=\"recording\"></div>\r\n          <div class='circle circle--5' v-show=\"recording\"></div>\r\n        </div>\r\n\r\n      </div>\r\n      <p class=\"tip\">{{ tiptext }}</p>\r\n    </div>\r\n    <div class=\"controller\">\r\n      <el-button class=\"controller-cancel\" @click=\"closeVoice\">取消</el-button>\r\n      <el-button class=\"controller-ensure\" @click=\"setMp3\">确认</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {$post} from \"@/config/http/http\";\r\n\r\nexport default {\r\n  name: \"voiceToText\",\r\n  data() {\r\n    return {\r\n      tiptext: \"点击录音\",\r\n      recording: false, // 标记是否在录音\r\n      intervaltimerid: \"\", // 间隔时间定时器编号\r\n      recorder: null,\r\n      time: 0,\r\n      url:'',//地址\r\n      mblob:'',//文件\r\n    };\r\n  },\r\n  props:{\r\n    visibility:{\r\n      type:Boolean,\r\n      default:false\r\n    }\r\n  },\r\n  watch:{\r\n\r\n  },\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods:{\r\n    closeVoice(){\r\n      this.recording = false;\r\n      clearInterval(this.intervaltimerid);\r\n      this.recorder.stop();\r\n      this.tiptext = \"点击录音\";\r\n      this.$emit('closeVoice',false)\r\n      console.log('zi')\r\n    },\r\n    init() {\r\n      this.recorder = new MP3Recorder({\r\n        //numChannels: 1,     //声道数,默认为1\r\n        sampleRate: 16000,   //采样率,一般由设备提供,比如 48000\r\n        bitRate: 128, //比特率,不要低于64,否则可能录制无声音（人声）\r\n        //useMediaRecorder: true, //是否使用MediaRecorder录音（不支持转码为mp3文件）\r\n        //recorderType: \"video/webm;codes=vp9\",  //默认编码，仅 useMediaRecorder 为true且浏览器支持时生效\r\n        //录音结束事件\r\n        complete: (blob, ext) => {\r\n          var url = URL.createObjectURL(blob);\r\n          this.$emit(\"handleStop\", {\r\n            url: url,\r\n            mblob: blob\r\n          });\r\n          this.url = url;\r\n          this.mblob = blob;\r\n        }\r\n      });\r\n    },\r\n    // 点击处理\r\n    handleClick() {\r\n      //录音支持检测\r\n      console.log(this.recorder.support)\r\n      if (!this.recorder.support) return;\r\n      this.recording = !this.recording;\r\n      this.$emit(\"handleStop\", {\r\n        url: \"\",\r\n        mblob: null,\r\n      });\r\n      if (this.recording) {\r\n        this.time = 0;\r\n        this.tiptext = \"正在录音... (\" + this.time + \"s)\";\r\n        this.recorder.start(this.successFun(), this.errorFun());\r\n      } else {\r\n        clearInterval(this.intervaltimerid);\r\n        this.recorder.stop();\r\n        this.tiptext = \"点击录音\";\r\n      }\r\n    },\r\n    writeError() {},\r\n    successFun() {\r\n      this.intervaltimerid = setInterval(() => {\r\n        // 开始累积\r\n        if (this.time == 60) {\r\n          this.recorder.stop();\r\n          this.recording = false;\r\n          this.tiptext = \"点击录音\";\r\n          console.log(\"对不起，录音只支持60秒以内的语音！\");\r\n          this.$message({\r\n            message: '对不起，录音只支持60秒以内的语音！',\r\n            type: 'warning'\r\n          });\r\n          clearInterval(this.intervaltimerid);\r\n          return false;\r\n        }\r\n        this.time = this.time + 1;\r\n        this.tiptext = \"正在录音... (\" + this.time + \"s)\";\r\n      }, 1000);\r\n    },\r\n    errorFun(e) {\r\n      // clearInterval(this.intervaltimerid);\r\n      // switch (e.code || e.name) {\r\n      //   case \"PERMISSION_DENIED\":\r\n      //   case \"PermissionDeniedError\":\r\n      //     // this.writeError(\"用户拒绝提供设备。\");\r\n      //     break;\r\n      //   case \"NOT_SUPPORTED_ERROR\":\r\n      //   case \"NotSupportedError\":\r\n      //     // this.writeError(\"浏览器不支持硬件设备。\");\r\n      //     break;\r\n      //   case \"MANDATORY_UNSATISFIED_ERROR\":\r\n      //   case \"MandatoryUnsatisfiedError\":\r\n      //     // this.writeError(\"无法发现指定的硬件设备。\");\r\n      //     break;\r\n      //   default:\r\n      //     // this.writeError(ijutr\r\n      //     //   \"无法打开麦克风。异常信息:\" + (e.code || e.name)\r\n      //     // );\r\n      //     break;\r\n      // }\r\n    },\r\n    setMp3(){\r\n      // phoneLogin(formData).then((res)=>{\r\n      //   console.log(res)\r\n      // })\r\n      if (!!this.recording){\r\n        this.recording = false;\r\n        clearInterval(this.intervaltimerid);\r\n        this.recorder.stop();\r\n        this.tiptext = \"点击录音\";\r\n      }\r\n      setTimeout(()=>{\r\n        if (!!!this.mblob){\r\n          this.$message.error('请先录音');\r\n        }\r\n        //如果这里出现文件报错   请修改record.js中 worker = new Worker(ops.WORKER_PATH || '/js/recorder/recorder-worker.js');\r\n        console.log(this.mblob)\r\n        var formData = new FormData()\r\n        formData.append('file', this.mblob)\r\n        $post('/public/psBaiduSpeechRecognition/getSpeechRecognition',formData).then(res=>{\r\n          console.log(res.data.result[0])\r\n          this.$emit(\"voiceText\", res.data.result[0]);\r\n          this.mblob = '';\r\n          this.url = '';\r\n        })\r\n      },500)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.voiceToText{\r\n  position: absolute;\r\n  z-index: 9999;\r\n  width: 451px;\r\n  height: 365px;\r\n  background: rgba(0,23,28,0.70);\r\n  border: 2px solid rgba(59,215,238,0.60);\r\n  top:calc(50% - 183px);\r\n  left:calc(50% - 225px);\r\n  .close{\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: right;\r\n    line-height: 25px;\r\n    padding-right: 5px;\r\n    color: #ffffff;\r\n    font-size: 18px;\r\n    position: absolute;\r\n    top: 0;\r\n    i{\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .voice-header{\r\n    width: 100%;\r\n    height: 60px;\r\n    line-height: 40px;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    color: #ffffff;\r\n    background: url(\"~@/assets/images/voiceToText/header.png\") 50% 50% no-repeat;\r\n  }\r\n\r\n  .wrap-recorder {\r\n    text-align: center;\r\n    .icon {\r\n      cursor: pointer;\r\n    }\r\n    .tip {\r\n      padding-top: 20px;\r\n      color: #ffffff;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n  .anirecorder {\r\n    position: relative;\r\n    animation: mymove 5s infinite;\r\n    animation-direction: alternate;\r\n    animation-timing-function: ease-in-out;\r\n  }\r\n\r\n  @keyframes mymove {\r\n    0% {\r\n      transform: scale(1); /*开始为原始大小*/\r\n    }\r\n    25% {\r\n      transform: scale(1.1); /*放大1.1倍*/\r\n    }\r\n    50% {\r\n      transform: scale(0.9);\r\n    }\r\n    75% {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n\r\n\r\n  #container {\r\n    width: 125px;\r\n    height: 125px;\r\n    position: relative;\r\n    margin: 10px auto 0;\r\n    transition: opacity 1s;\r\n    img{\r\n      width: 30px;\r\n      height: 40px;\r\n      position: absolute;\r\n      top: calc(50% - 20px);\r\n      left: calc(50% - 15px);\r\n      z-index: 99;\r\n    }\r\n  }\r\n  .circle {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    border-radius: 50%;\r\n    animation: pulse 3s infinite ease-in-out;\r\n    background: #11bfc2;\r\n  }\r\n\r\n  .circle--3 {\r\n    opacity: 0.3333;\r\n    animation-delay: 0.36s;\r\n  }\r\n\r\n  .circle--5 {\r\n    opacity: 0.2;\r\n    animation-delay: 0.6s;\r\n  }\r\n\r\n  .circle--3 {\r\n    width: 50%;\r\n    height: 50%;\r\n  }\r\n  .circle--5 {\r\n    width: 80%;\r\n    height: 80%;\r\n  }\r\n\r\n  @keyframes pulse {\r\n    0% {\r\n      transform: translate(-50%, -50%) scale(1);\r\n    }\r\n    25% {\r\n      transform: translate(-50%, -50%) scale(1.3);\r\n    }\r\n    50% {\r\n      transform: translate(-50%, -50%) scale(0.70);\r\n    }\r\n    75% {\r\n      transform: translate(-50%, -50%) scale(1);\r\n    }\r\n  }\r\n\r\n  .controller{\r\n    width: 100%;\r\n    height: 120px;\r\n    line-height: 120px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    button{\r\n      width: 120px;\r\n      height: 40px;\r\n      margin-right: 20px;\r\n      margin-left: 20px;\r\n    }\r\n    .controller-cancel{\r\n      background: rgba(0,0,0,0.52);\r\n      border: 1px solid rgba(113,215,214,0.57);\r\n      border-radius: 5px;\r\n      color: #ffffff;\r\n    }\r\n    .controller-ensure{\r\n      background: rgba(2,69,68,0.65);\r\n      border: 2px solid #80fffd;\r\n      border-radius: 5px;\r\n      color: #ffffff;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}