{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nconst routes = [{\n  path: '/main',\n  name: 'main',\n  component: () => import('../App')\n}, {\n  path: '/register',\n  name: 'register',\n  component: () => import('../views/RegisterPage')\n}, {\n  path: '/login',\n  name: 'login',\n  component: () => import('../views/LoginPage')\n}, {\n  path: '/chatRoom',\n  name: 'chatRoom',\n  component: () => import('../views/ChatRoom')\n}, {\n  path: '/',\n  name: 'hahah',\n  component: () => import('../views/hahah')\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n// 导航守卫\n// 参数1 : to 目标路由对象\n// 参数2 : from 来源路由对象\n// 参数3 : next() 下一步\nrouter.beforeEach((to, from, next) => {\n  // 1. 判断是不是登录页面\n  // 是登录页面\n  if (to.path === '/login' || to.path == '/register') {\n    next();\n  } else {\n    // 不是登录页面\n    // 2. 判断 是否登录过\n    let token = sessionStorage.getItem('Authorization');\n    token ? next() : next('/login');\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","routes","path","name","component","router","history","beforeEach","to","from","next","token","sessionStorage","getItem"],"sources":["D:/download/chatroom-master/chatroom-front/src/router/index.js"],"sourcesContent":["import {createRouter,createWebHistory} from 'vue-router'\n\nconst routes = [\n    {\n        path: '/main',\n        name: 'main',\n        component: () => import('../App'),\n    },\n    {\n        path: '/register',\n        name: 'register',\n        component: () => import('../views/RegisterPage'),\n    },\n    {\n        path: '/login',\n        name: 'login',\n        component: () => import('../views/LoginPage'),\n    },\n    {\n        path: '/chatRoom',\n        name: 'chatRoom',\n        component: () => import('../views/ChatRoom'),\n    },\n    {\n        path: '/',\n        name: 'hahah',\n        component: () => import('../views/hahah'),\n    }\n]\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes\n})\n// 导航守卫\n// 参数1 : to 目标路由对象\n// 参数2 : from 来源路由对象\n// 参数3 : next() 下一步\nrouter.beforeEach((to, from, next) => {\n    // 1. 判断是不是登录页面\n    // 是登录页面\n    if(to.path === '/login'||to.path == '/register') {\n        next()\n    } else {\n        // 不是登录页面\n        // 2. 判断 是否登录过\n        let token = sessionStorage.getItem('Authorization')\n        token ? next() : next('/login')\n    }\n})\nexport default router\n"],"mappings":"AAAA,SAAQA,YAAY,EAACC,gBAAgB,QAAO,YAAY;AAExD,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,QAAQ;AACpC,CAAC,EACD;EACIF,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB;AACnD,CAAC,EACD;EACIF,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB;AAChD,CAAC,EACD;EACIF,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mBAAmB;AAC/C,CAAC,EACD;EACIF,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,gBAAgB;AAC5C,CAAC,CACJ;AAED,MAAMC,MAAM,GAAGN,YAAY,CAAC;EACxBO,OAAO,EAAEN,gBAAgB,CAAC,CAAC;EAC3BC;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;AACAI,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC;EACA;EACA,IAAGF,EAAE,CAACN,IAAI,KAAK,QAAQ,IAAEM,EAAE,CAACN,IAAI,IAAI,WAAW,EAAE;IAC7CQ,IAAI,CAAC,CAAC;EACV,CAAC,MAAM;IACH;IACA;IACA,IAAIC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IACnDF,KAAK,GAAGD,IAAI,CAAC,CAAC,GAAGA,IAAI,CAAC,QAAQ,CAAC;EACnC;AACJ,CAAC,CAAC;AACF,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}